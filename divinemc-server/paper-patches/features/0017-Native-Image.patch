From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: The Judge <53906078+thejudge156@users.noreply.github.com>
Date: Thu, 26 Jun 2025 18:55:38 -0700
Subject: [PATCH] Native Image


diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/D4Wvzn1eBR8kSBaJTQEbM9.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/D4Wvzn1eBR8kSBaJTQEbM9.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..e05dc6cf043633fd50a3c941e1f3e409f85f0692
GIT binary patch
literal 3687
zcmcIm`*Raj6#j0~vS~=64Ue{9f$|J(F;qd3B8Y`zr4J-+ks`)TvV^6{Zrp5Ysi-)P
zZ_x2qXLQD29cC;zLPlpCho2n(D97*aZeAseFk&+MxM$DfJKsI`-22zxzy1#30KOL3
zZd%!R-dxgiIW>MoT~Lc@OE1{*tY*Zu1vQr(+OI$e?DEl@RBe4h8!Z`WTQ>~_L4g)&
zClE~P838dS(CcHHa6%~v39LGz8@hdzR<XUa5rnZij21*9SOujG0j#0h5i_F+v?pve
zJwKrqrqxuA<CeUt8v+|+7se(0cuqC4@q}&ZMs~RBDuDF@2V>(81v2d8A&QLx13so^
z!PfKol4ixH3ijEO!I7q*JB%K539M`4Qo&})(V~_XIOhv##58Pe(H?#{WJ$sB-nzu6
zQdhLJJ<I@UHOEP~`6L270*3lLJq%4?MX(jy!ko@NfzE<urnO>mLQh+!trq8t5$wQf
zfh|5vdyFX96~=Dt6zKC&bjwOoqaY^GQ7a1<nSy?S@MX0)Z5BoxmUjFrOMB-c7{oq-
zoevFKEr56!`|-3uTgI$L`N=;DQ8-iS$Mj=VgP)5UD-Ct-P1an~*?I=g$~+DTtWKtr
zZf8jD7r5=4NnP9UE#3b;nWnishv#MG9a^y{z5Ep%7Kmmwdz|f~q-M2Q%__2?ISq*|
zY%M=kn%tzCXWv;Ls}JKf907#zQbWzTUlhE|)<q|0R7=f|m~0dTQW+mNGPA1XNjodj
zDT_ik*oN3x(`X@Wu`sSJXt@wx5s;&4t|g9MC2)>H7$+DyJZYraJu?ZjWTgpy^!|<e
z-|eYdUyLRGxIQC1k>jE!l775V&7v!oP-a93Q!MdfDOGg(t?a^M&45Pm8qS6>f`m)5
zLxPhYYoSOcTA1G)3DJwEG()pg+q5cdJ2Sv<VYxxLMJ(`*Zvi&$N4_;!w;KEw%wv@4
zoZM*6V@@uX3*5}IIWr}<z#V?R>%w!|baJ2?a$cejw(<y)cuQcLPv4m_GTJ5G&@u{A
zZAe2UnJL}i&b#Ex(PLy*ho`cqK0;0rXt*TF$O<Uj8%?gV#^g?zCAoD)pyNs#73Zl~
z)NHrfzxPF6$6FmTZw>na`;Y0a+&&084?|{Wl54|h2D&feCm;N6STcB#E6+A3OL@)G
zd6L*2dytU&mO;goW)XV{3)1`@uB+rcd-=LLyD^?QvX0hOEXiZnyR6Q9DQD}2+*N@?
z^)Wn$b=IDwY1H@dzKr@oLu+)4K*5I%QrC@wk9bC?aqmG>@G+b5I1AoY^A3U0ag*mA
zwo6@Zqn<EyB%Sk4l?qR!C2i`G)1m4C)-wJAUxx7sZm`q1U2;^<Y3L&fEg;o=2IOIs
z=jJfT4xei%=RuYC4vx0)JKI0P{rAw`AN&PtZ*#;Pcn|PuLlo;g-EE$3<TnJ)-@}If
zGB!18ccPabUC(`JMUWoa`v(Tki@Vr9a2I=)8=QB_gO#T~M3}Ao`qV%fL*HTzt@ib_
z1j{(M?7o)qLd`k|5vAb~yy%&C^C|Oa>BOJ68iEKM#W7E-%hL)*kJo(3GzCsnU2XJ~
z0>PDzPClr!YNgI7PI<u&@hN@xZT^vWpo^D;C}o>?^+v~*qo<dn6E!GgtUDklWU>mm
zmn2H7w&<B)$FaMZu4%i#XD~~J4yqjFQ!>7#Nx&Y;HwSOYKi}N>mC*#70nXud&xK#^
zVela0>HNTXk_C04f8W3$C+Lkk$Q*7R7>tgUarq8%?pxs;pQo!5zB!VKs)TQjgjRML
zi+6C1_cE>@ZtZE6IR^15@0(Z_?R-|Qt$ZKiHNxvNUJ-%{A%Tl{lf+i4wi};UD|{C<
c<gcwmDdXnPxF$<B;5e5AR!juGa^$W50EFZ3Pyhe`

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/MDzY7F3fT2JEkjFAeVCmyG.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/MDzY7F3fT2JEkjFAeVCmyG.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..d5c4940e937899b1c126affba24fb53d7cb7ef9d
GIT binary patch
literal 3559
zcmcImTXWk)7(Ht_m7^$W;<QN%^b*pG<0QCkS}08^EukraTuPk_O({l}6-SLN8A%Rp
zfN~wKg&AI%fnUH3Aq=SpW_aim!;fP4R+3}cwMsJ-&seKnefwR`o;|yN{r%e?08Zi?
zhCb8Er;6s9UMMK38_KF;tCn7JQhCitX{$;hGa`a991by?Rvdj*8!sEGqnm~Zfg#GL
zF$ftw$G|2S_Jzz%yOBi17<Qc14c$3Mvl0XIG9<J~h(eaJ17a&8=peUaW=>;hPdkdb
zGNqJem283f(W0Uo3_Xc!lRW!WK{4{Fv}5T;ess%K1iKhcB_<!3$Y_X%IC>ZcL#CP~
zM=$DYnw6R<IakUC^)wNCB<w{mLw6IGA|B@$-PBZuh0v77OvBM`I-?IxnL{u-5GZ^m
zdqY#5Q3{|c1zLo!A4PzN$RSv#pF@+hWE{XjiI%gEp{rz>s%G0$x@wt@Vz1aT`q9R)
zKLlwX5fO(a9KoS*=6bZ^(1=Jdbk=C$WhNrYAT2BQtXUd!QR@F!lm-@M3}KkzP)K%O
z&@BR_Bpkz246QkHE6PvdQ78*{DZ`N71{=a$)KID8xxZM8O;_s#MtB`38QL;x#&)-B
z<`~0zXeBk(2xad7UQ5$bp2jnrc&8ioq+h;>GYs*(=1h`$l$E?TuUR(fnX5;nU_0qk
zRpX|WBFWCKL@<o6Hw=j3d>!SyFCtzb<sv7S6-z0OnWPhxNVR{#$jvL3KiX9tov~=p
z3${Bk(KMQr)0dWXwOnv+#qbivrMVXkm2@(fHp`Yuc@EvXbMO130mJKwv@pjK>5iV@
zXm27NontY)LX@@3S=-f5uBsEwBFmV<w1hFtc&NEmx%txK+EiMU5?-VVb^DTLXqMub
zRuw)MQu-!w!S_hX@NFoe>d%)@QU%x@wgI-myG4F*%we9Be}N9Ce8J4}BdtHocOX1N
zOeYK!gQFk6Uz%lH!|MzOLv&=$$Z1Quq2)xp(TWVN6PQ`upp$eh6r*ia7RaZ1Mm|JM
zG8AMv7<6O_nH5ri?tr5SI;rxSH7Y~H5<jf-45F<$9(R8TO*;Tuz?;7#!?OC1wKkpw
zl(dc;ytEa!wBs_0UJ<nSTOD({T+}R`%07~~KgZynB*UzWK?!ehcNVRi;VOk53c#bU
z#X*?|Uv+CaA>*c3%Pk^hkyJu273lSJuoOS<Kym&^)8gL2yWIbK<d0Osu@u#j@xC|s
z0iEeJczsfc_^3_}J?A1mAx)hmntOf!Di@zL>DEH3r}M+mAB>$<3;x|uq<dvqn^|&o
zDVSf4fnVTD2_NGt(icww$Mu4SJ|bllw4n5i@GB)<ekIOUx1|MlTLO#P4zi=`Cp|l<
zx1a1u)gdMCqCF}6ik&}Gk1C~Sg#N9FquaMV=-bM_BXadFb|))%tlqi{`^cl`xeqN6
z$U}Q_aOf)A#FK-YIJ#cvyo+C#eDmX!b_;!dVz7ea-=TwM4eyN#6`Wf4UMqOEHd_FT
z)5NoQ&Y!-AT3$!A3xEDt7lh#)p7*VKeJde;q2`O1$?)Qqs~+DdA~ZU>c)v}w(PkW%
z0>QX%AwJO<?B%VD_7O%r@7DOF(3#xC<wnz2amDw?^WuOu<`qR6vjH3KuF*yU-4A@5
z+k`VG$ob^(;1B`)+6LY{(=s>|pQs?Wfo1Qlu&@EM0^94oO>Y}mqh|%TEBNqC%ib2A
zsen)E87JDcQ(OHXp!d({FH^)APU9*Ti8@tE?ZM|;^cx`y{_EXQ!JS{Q+}Yu_rsy_n
SoLvz&1P8L}fNuTnc*{SJ;m;!g

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/OXdYVZySCGD3W707dvGnnK.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/OXdYVZySCGD3W707dvGnnK.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..5e8ef3c737e353b76ce4ea9fc639ecf5b9a7eb2b
GIT binary patch
literal 3559
zcmcImYjYD-7=BJR?WWspX#=!WEwq+PNLxd>iL@eE0js4&LW>kJZZ_MnZL%A8H?>p+
zZ{ro6@vAfX3!D+_2pOI61D_m!l;eALH_ax^A{{X^*|X>Dd)~`)p7WgZ*WbVW0pKXU
zVHh;6e5z=!>4k!lT2fXNTeb9(lgevGN?TD1nd2fD!@dx+8O708v~y)cb#&7ZAuvSw
zGzKA~=NQ-&Lx0HJv>Qo8jG=WxH+1I|%}N}cmm#5DLKL!$R)}qgpp)EAnmLW3Bkd^a
z@&%=IS;-ctA1x}n!O)YqHqEn76%-?%N;{Tr<i|H$MX-b6SYrC2iHwJMh@*#LIAp3>
za`d9Urdg@kl5?qSP)`%FOF|!d8MZfZDdI_v(W<60TnSBS(li`x)fs<y${d36gMq?l
zvrC%lj8gzrDbON({Wt<VLJq+?{T!O4C1Vc;BwEfvhVGJOs+w(I&{fNH6noj0F@$!8
z-62T(h=|xHVL$eUGuNXPhekw#p{qs<FEbHI2I+=kUp7mVE=oiHiqgRa86y~F*c+0a
z7j%OFDG7)03`1Ma+=%j1cofRQUCJ<|x4?!l7d2Gsc<wLOLetecj3c~`qYUjCHDkNm
zHFJpJZfGSn)d*$o|6WVeQjX(UPP`Khd(tmo#7TyDUUQ~NJ<3X6o7XIx^vu;GQm}3G
zsj6`^N|9t|M<N);*Bb`JaJr6i-WL%sl5&xgi;ATbCr#1`N~GF9W8~%)%OCBoj?P*%
z=mp!Em}(kL%IS-Xx>_zcH)D92;?mr+hDth_OPgg&r94L-+<EZ*fq>!lL|T|*iF9XA
zaI`m(j?S?dUM0%f<*e=MCs);}W|3uFz>I`R%zCJ~Rk``n;@VVNloDQ`3U&LuW@wh;
zm{t`&7gG8ral!XU$?$C`q3X|<P*Mfh9kv0sz`F&0aLi$zlm7}GPWghF<wx33nD0P%
zhL}zmC<aGAzFC@OT*Dg-10gyxXXLa+-OzF(-fTk#*9pw5ZqP}(7K+gpDhuROJtH5X
zCK(E{91J?Lgv>H2!1jQnDLSe0nl&y%!y-Sd^9-V`IUaX^2u(WxTELsXBg3-#kF_?Q
z1(dXoC0^RHTiTe6qE`g%{Wiy(DHk<Mr?U4aHs=`JlVq56F(~0}?#`lhGhC(6LjidF
zwKypA;45w|hh?mKwcI397D*-aQh{Di1WWPr4ix8)G%fC3yvO~&PyR?H97|Ch8MnQ`
z59my<!RwPk#7A{<=s6eh32Evy(cJ6%SGoAKNw*eKJ)Iwh{$OlEE%<jsk?xgcZFbSs
zrC@$F27ZArC47vpNMAe!Jf{~l3=%1$parF8gkLG?@+)z+x-BiZ+Y(sRc9I=kKk3;;
zz1?I_stzf6A00{IS8V&4dQ>SrBlK@W9NT@{0pC{s9g(Z|u`^l06ZO{J=qHb!=RveU
zAP*hM;gPHC9-bb)hXZ%(oOko<l5ajnX}8eVr-myS`wpEnYqT#aRB-IB_gcYowb=q#
zoF-1-d4KvYYIz;eZv6RUT@Z#-c)_>o^{s^XnVK(NCc{e`u6lf<h|uWh>}H#2qs=*-
z4+P`Bh4@rsuva!R>L-kN-fi(|p(}Y07aL7q!zJGz&x-@vm{$~OTn^Z9ca1g@=ziea
z+#;MgK~5(}hertD*VpmZ$(G@f_*4bCb=>gY3Rl))R$zO*cj#>$YxJz(Rs|oPZ0T#^
znF{!no^hgG2esAz9(w<b{xU_3;RLQ?fv8iZ)GmC!LBAtp!GFE272Np+H@Z6A))d`l
Tjk7D_hTuR}9nh`c9dG#u)tk>L

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/RWVWR4hWOa3NhlNLR1QLJ8.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/RWVWR4hWOa3NhlNLR1QLJ8.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..cad6dec4061f5779de88e8f465e2b54211f4d9f1
GIT binary patch
literal 3559
zcmcImYjYD-7=BJJY`Sbq8=x1pKrNS$76SzoX+^M7jHWFTTBL|^v)QKGCcANWQ=uwe
z$16JHS7-DWIAg72$>@w9_~iJb9N)9MX*MB?Fk)u1XV2O9yqD)Z=Q-!EzkmA!zzKZA
zFl3m;RM}Y5N+mh9EU(IzVrmsTRaEtqx+<4)V*(h%fdI1^+16Iosj9BnnxP8_Ger0_
zhHy?RFt9YkV8Gn06G=dfVcUeJYxWtMl{h>vLBw_u5l9lYLFhmTUF3GsD5wmbSzA_C
zrsc|IIbWiFq%3PXLvP|*hG(BD$$BxBwM|Vgj&HdNVHd;6MCQJUj0bp#qnBYMV5(8E
zwX(LRnyJ}}eW|KbPZiKFVgP*%JKMMv@HoflhN>`J2~26y&~5dGJ%0a`IRxW}eTC2F
zmsQ0crvQpvqDA=nQ3QB^9Q<{9IkZVj!d~nXX*q`&dMc)&sFpRYDW+k|)`}%z7~2{4
z1R(7pBH)0CgV-O;T$ffH8UYE0?glN~%mgGE#3k9fY*Z#4l!pHmrNavnMsb8;e?WF_
z&@BR_L>$Fa3>^hyE6Pv7Q78*%DT9!H2sQ+{XrR)>b8oR0+OF0Zj`KQBFl^5$Im_9u
zxuXp0ft55=BapfOdo68Cc^c1f;+<;QlV14(PBX-ds+}SAsLDlkUNtS!Ge?g|!FJH6
zy2j1OWs;p;34a(*Zx|56*(S=lUj)2B%0*5t%BEbNG)N~Xk$V4}UYM6nZ?vaAI&0FP
z8*FzX-8Pz7&=waprCPFY#_$rwrMc&Ig><rzHL9jUd5+$_efRrAKEvyYY-o-pvR%FY
z(Y{1BGRI<gg(z!P^OmEZTvgNUB1@RYjEG6hx~Mr-Ir-A!T2xwu5?-JRHS2<^tEOxl
zW*t5UQu-!x!FNf?@NFQWn$MR&Qu){&v;iK1cMJUBn8Q3L{}no%iX|h@kF?<+-@fn+
zF^w>gb&h`gUTKza4X-oo3(%1{y`U~?x>^wMMh9}ZPGIIWolerVK#U%uGG9LRGx7my
zk{~0`!Js26oLeCU*y(eWrjx3un&T2wEb_y;$RJp%?Q-{rz_fj!`Mh~MGAOJ6SZnK9
zKuK#@=B2GTr5%${c8j3B-(edw)v{`8RQAEdy*c{#BpK!%3@UhwyEAFsbVn()KmZ<n
zEjFq=_^MOOn1mZ{EjNjjWl{;PQli&W{!+ZWeZ_erZHs#c?{fd|kv~!i+msbs!u#&v
z2Xv-4;Ppr$;G-rvbe#+MgfulnG<W;nRW6<}=+;82r}4wk8;ngTCGT!1(7m#%&MrE-
z<j=3cz%THnh>!6V>5Hp?Q(8&I5RozhT2Ok1_?40_zanR=)6#-FErCUC7unJElb+qw
z+e7xG>JXE6(3uSXiXA^wk1C~Si2fajW2a}k&$E?&N9gJu>`vD3ShIBx2FauAc?eO2
z$wOyyWb`WA#FHbNIJDm6yoX<xJo96ec9gz8F;c^^@6biFjtoS?HJn^`Uu$@_F*^(v
zr->7I&YRv(Ew3ZegFk<43c_#(&wEyVo>e%0uHlQ9$?)Qqt6tA26mE5N{$86%tIZTH
z_=0iY;dr_=*vnfP4H8B??~ZsT+@0LS#a7c-amn+?^WuQE<`qE}mwh(eU8{`<x*vEp
zw+LrWkh94nBclZHYa4j;baZ4ip01&=fhG5?bY%lZ4VK$`o8C6CM$Z~<)$rlz=s=Wb
z8pfyej1%oTsjdI_()(xhmndQkr*IVuM4dXN`tkV|{f?6b|Mf*{xcv*3y1Sg#5S(U>
Svn%9;;6T<L(5>GYkNyL2hR+`W

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/ZhSA8zj5AE4Gb1H3Mzzl7F.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/ZhSA8zj5AE4Gb1H3Mzzl7F.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..5defbd41527e4b6db9231b5652e5f406d5819178
GIT binary patch
literal 3559
zcmcImYf~Fl7=BJRuwlDUNLy%CT995s0Mo0s1#2soic+Xe0ZXlMvsuzD$!^@;AVqDx
zjo0doU!Bok;Eaf4o6#9R^poR{a(vJ3hHOH%ma%3gd-j}t&wF{!bDnel`un#(0363R
z4E?5+PZiBoy--k6H<e|@RxQ2cr1F}P(w3D%=9CD=a3I8NT5<GcZK7<bj&2$v1coS|
z#vo+$90QwV=na{hb|Z<1F|>~9hVGo9S&6|p84|Whh(eap3b73lbdcL|Gp8}MryWII
zx~P<{DA@w_qeVqG7`hYJrg-+Lf@0)TX~)uy{OE?O2zD}@NK8F6k<kzjada~bg-kU|
zj$YJPH7hk!axRw*>S-c&OW1=Rh8;~@ig=P^w4$jD^Pwq?n}(yUIHM0wnL{u-7$|%u
zds9=LQ3{|c1zLo!A4h;k$RSv#pF@+hWb8wqM9bOF&{eWbRkQ7jx@wt@VlUY;2C$7`
zZwS&pA|eh*IEek>%=Ku+p%IZ_=&aGg%S=R)LAs&XSIpA5i_*ZqqBOW5V;Cb0`$Mwx
zf^HBXCE+lhVQ9;l8&Q4=k3w0vOBsgr7T6HxqJ~Nx&;7+(Xu4WQag5h-oMBr=&DidC
z%^YS}3$3K48llYn-)m`F%CmTm6Ypfhp7hHXahf5X*PJO*kFt{2<}}MDJ#+Pl6l^<v
zs%qS{QY6{gnFxmQ^@ag4oUNmr_eI2uq+I0Wl42>vag%g{5~=pj8M!&d@<+R>qcau_
zdck%jCYwf+a{A(;u9geVtr%XWxHR{?p^{GK(q`FGDbL{tcOQIzC}4O!krrlIBHhs)
z9PLS@qq8iASBbKAIcvN6$yIf-S!5X(F)d*nGahPgRc^ktxHgp*rGyu#LfyWg8JeXy
zrd5T{g_OQYT<|?oGJG3KsQU9IlvDwBhi!l@@NR)09J83?<e#U*DPJ(N{74%J^BoA!
z5Yq_*#o*}2H%qgOYj}g9FGNRXjhwcq8(L1pn{CM8I)Rzh4LV6zLowPyWr2LEXXGQ)
zBtt=#gF#1@kXa%H*b#6vNheiavqoiTSmcLwo<X!V$K&n~p=k#|3wZN)WLQ@JvDU`3
zfRfg6lb5#SmUcu&(JO-Xew$-Xmy4REQ`rX-n{y2ANixj37?kifcW2SM8Lm?3p#VJo
zS{#&l@MX7_qcT>!T5b_3i=+~IsX(tMgQfU+2a5AYnilsi-sAq?Cx4_8j-{xMj62@o
z2Xv;_;Ppu%;-fk_^qh<Mgfw-EXzum>t6Y4_q+1KAp3V<Le=s(t7W})RNcYOJHnZsJ
zQZT<71HZtR5<bRPq%WQVPUr;<{Y1(rXhG>2;a5t!{7RgyZc7X9wgeWn9b`w>PkMGz
zZ!g)CszXZNM|)EE72AKN9#u-u2>sg-#}41N&$pF-N95{#>`GSfM7?zvddZ{bxgRYM
z$U}Q_X!t6-ho^_`;m}&0^Dcf}^39J>+AZ|;si6vve1{I2HL@ovRB&R=d#&J9ZMFaw
zr-@^D-k-jkT3$!A3xEDt7lh#qUhu7Yd@CV-uI7uE$?(#Kt8U*YA~ZTWzu6|*XfuHe
zfneOX5T9%e_R2;^y@V0ZyDdH?bSCfNQlsf>xa|Amd2v7+^NJ#kD*+qsuF*yU-4A@5
z+k`VG$l2t`&@ch~`a0e^-7+*BpR6FajvL-vVSXKE1-93Fhu+q)O3w;zSMcHKmOU*z
zQvsjSGfuQ?r?&dvNAI7}U#5sLoWxZu5Ou1Q+KtaQ=y!}P_^+q6g1f)qMrViHnxfmR
Ta&|@B5FE&=1G@FQ<1POH8)VNf

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/bsDdqrrsmOFNUuP0MecX8A.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/bsDdqrrsmOFNUuP0MecX8A.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..49974f85c297d1e6b010392ff4e3f3d8b8a81023
GIT binary patch
literal 3559
zcmcImX>;2|7=G4A<)})UxNQy~Z9*@{NpaHyLQ+agXi6YQshfnP6eG)utHzd$B!@IW
zIft__!&heD7cfHzL+XJUKJ*jAk79UNl4IGiN;?$KSgT#V`yS6e`|SSp_iujyIE`-@
z`VBLmDjMrrp&+Mj%B!-am|DqB<yAeUuF8eXhyccLB*1J&wzXAtqO2>nX6ORK3=uw!
zA)L{23~Z92H(+ksi6kJ#u<NX*YxX&sl^B?pAY!+O2qX!+AhaNaHgY>|<Wz>%v@I(u
z({kymoGnm4Qj|5Fp)+x9if5lH$a+4NwoOgXk8QgOVIRYp#MFHg84K_bM<>Hzz*M7T
zYej8cHB+-C`$}1-o+_YQL=U<c_BL@T;Bk)8nyN4?1g11@=(f6MkKI3I4#C)fukhLI
zO;xeSD1agtXc4}C6agL}2Y;Pj4o%XMa1ebWEoVPNN69o4)v~5F#WZZ$TCpS?!fu8G
z0Z4m@2sk3*C=LfR*QFJQMnHn0y+#W+GXY5k@rG<&HA>?SN{9XxrGX_0LpaWGI3PPW
z=r#dTB2M5bhL)VM9p$IsD3pb>ltD;81RH`})KID8xwlwLO;_tAPVqWUGwjYN8OzzO
znG*~fftA!$BapfOdo4{%c^c1f;*B)yNw0hXqYUx9YEO}Rl;ylSubLL=nWIOfV0-9O
zRpVylBFWCagg=a@Hw=j3d>!T7F9Kd5<sv7SWm7JW8>ADINVR`K&&|uGH`-Ahoi%CD
z4Yofq*)*D%)0UStrChLY#qbivrMVY%g>*8PHp-?#c@EvXbMO0OKEvyYbZCwx(rumo
z(XK=~GRI<gg(z#4vzDWuTvaEVMV2s)84=@{by0Jwa`L6cwWzcRCA>rxYStxHS54VA
z%qn~ir1VYXg71=&;oCq$)t@hcr1G&lXahV1@0R$%F^73h{slUm@&zNykF-NUzJ1{t
zVj5u}>m2>~PHC2K4X-ow1?b3}o>P}KUCjx2qXijUCor>`PABPlAVv>SnJ=H}8TkM;
zNsy7{V9=2j&a99E?DaXCq?0PInqv}FEc3%U&mdT;?Q-{rz_fj!`Mh~MGAOJ6SZm{1
zKuK%3$xB;tN*k6?bc>+9-(njx<)Uh8RQA!t&K&)Fk_@vB1|_`3-I=s*x}y|YAOMfP
z78_+AeATJtq=YrMmRm&1BB_K{D$whQzZ5TTUvb_@)8gL2yWIbK<d0OsHf6<@@V-0v
z0iEeJcs)`G_^3_}UFQNmAx)hkn!A1PDi@zJ=+;82r}4wk8;qS*3f|pNpnGLmon3Zx
z$)8`1fnVTD5g+3#(ic|&C$xf!ej;TAw4n41@hc@=enrk!r=<mVS^|sOHnOAZCq3J#
zcYy3k)gdPDqBR-*6?=ZB9#u-u5dB*a$6n92&$E?&M`-ab_9rWNtlqi<z2wpL+>a>2
z<e@b=IJC&N@Z{hYj&0OA@8H)Z&wQBDj?&jB1}hl;4sA5+cuyo;!I=&BwSs4Bv%_F<
zns^q^dDFY8<#j|l@aK<pK^V^AdC#iLvkJ#A)O_(W8D89W)#(|9!i|nD?zD+C+Dzb*
zFBtb7j!!lQdwDyfUc!jy-4dS)w<ou7xzY4hT=D$zyf~nZc}0-MRi6!a*JvYx?gyUD
zZNixo<b3k@;1B`)+9uu{jSddQCo9Np;)eTHSlEP7f#vqzrngP3)3bux6?`}v?TPYC
z!}ye*aiU!-wblPYdjE|65=D$*1dCWA>QpJ!jnB8~cZw|duPa)?onLUHz0GM2!D-ex
RyFyL~4rJ8<-TIyJ=s)}V&no}`

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/cRI89yMRAXBz8U2hgGvpx1.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/cRI89yMRAXBz8U2hgGvpx1.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..4316dc9f0ad2dda040cd5c1b8cbab7ec8eecf468
GIT binary patch
literal 3590
zcmcImYjfK~6g?Z;k)tYU;<iZxq)q6{dEo|HC`l+SX;T7ulsZXCN-?smxJqovNODM0
zXn71UKnwIMGw=(Tp@bpzzziSyiQz{v+?C{5cCFG3#WR+)yLazB_w3!X``6#U{Q=+v
z?lANiW;T&GHndz$PAto-vZa_>!A@jVJ)y43xzq^(jNwRt*|cnHtLk`BS8UDD1%w#F
zd>TV2rDYh{1VdNA+@uppK$M|zRMR#4G|h_l&Px!nOGFrwghmKWXg~|O9Wyd2LvzxW
zm6a*EFe|5X)DGumO=oD2Uzz0S6FFJWCX%+P>DiHOR}I+9a56smP#_}#9%5)`=nt4`
z6l^W8ZK!5qreI$x>eNyN>=)6A4u(B-Tnc!SbF`)^43`5TjTySFuGu3Ghs-G$>GdT(
zlU`O8dxQcga*h_^_Tvcf2pIf%dKl`!l5h~+A}wbRLtDW#6xFh(G{rP**;=tA9KtS!
z0|88Xj0iX);wTOWSFT%DoEiafhSo}1xX1+bF^Jb>Yt|@?IV>IeSC)DgB@AGY;cx&t
zH|TZ&Bt#s?GYm}`V>`-E!BGf>vy?$h@1PojTvS-8s&j9#7VECovv`i@ae`r2N=aGH
zc1;~;xEq*BMKuB|_kYi&ZYs~?1zvckYWAd;zJOtdSXQ+sNj-{kR-IQ(i}cLVBT}&4
zG*s5OX*o}_vp4P!<LM0pqBv7ka_)$LS4g?Y$wk?e^J50-1OX|x&+3_Z+4Oqb%Dpot
zb-Ka!#V6`U6EoV<lBN`M_IebrQe2vQUROvbGfAUpDui?3{;m7pAM+VrjVIY0izi#!
z{k<LWWO$B6@j8{PRZLrsesWcvs25qn6sARtVa8?6$;!b?i)&G8VFJ8J8EV!ARaZ^f
zHq0`84y80Ea=~|tlHpEZK~<kGfkox3?w}2@gSuPf2ge-ddGTMS!zr6H()>s}6y)0%
zo*}9c2eQuDk3A^O60YDahVB3znbR}slBTN}0dF@Ug{wqnTGQzy-3a7p2buZsl+VaV
z$Vq~XG$(_OtVTmuY1dTecFrjBlSqP!r6xN1vJ8Ty+HUp!5D45yn-7?`CxdYP$82j)
z0|KpKnJ2fx?<^}MZ+m=TCg>Q>swP?Gq4S%FK|91Yri*#i)QFCwai6h=+`m`JFzrl#
z7bXv4(R%8Rf@p!XJpK%eSmnXrb21!~u<quvLB*OU_0S5rb%s;^R6N|i<h-7`$-R#c
zxc?jEkJQ69WyO~8q1*XUl^(j4BH$Cc0aTX4V_CqbRmN^e0iTlsPtvAv+up@5Hfhiu
zhcr^-N2k{r9aVDPO;Vs+Xi=S6a#YNZy0WCVa9hM@_?pzn)yr`$r=o{eISg86gy@Sd
zpmbFh`SLq&qK@7zG)|XPdbU#Q0NIiDL+rbU=DyIc*!?rLC_{QS(7y>W?D1^7JzME_
zG%Vc1zP=KksJ3oH7kP9&_aH(jKwkR?7T6Y^?%%?(yH(EH_@&A-A0oIB8hxt2grV=y
zLbC=t!=VyR-gQ4qc(F1&1Qw%-qj<@izMtMak8m6Q{IMzs!)d(iS#@|;q1f4qFP<jD
zxoubNo>4=n*3tO~ZNjxS<GA1p#(jrk6Scu!+eXwy9C6%DvB^+t-xe;`n!bTco<EL@
z6IzQaj3j1#Hr!pUjR?9$cs4hPXI>a*`Ud+4h~PIj@y>9he;_tdLS_@!+^^i_O%zJ7
z-PRg?ZQ?pTOSoCW$HS4%2uB*i7xau#(KXY%{69$FU(#Qqh*6xv0v4%s$|bcQUu~D)
i09o)~Yimmh-~57t;JmK$vTAUAa|X*Z8NPM;BmV$!nA+$7

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/fxEUMBqfhz9v1FNpRKfL7B.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/fxEUMBqfhz9v1FNpRKfL7B.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..38078881426f9654d2ee4c3df7bf4fde1c07c995
GIT binary patch
literal 3559
zcmcImYjYD-7=BJJY_e=i8=wUhXf2nJ7Q<C5MFcCwXxbv7#TGGcHrudmvKx0d6{_NO
zyrMIHbw+=IGuAqmjL!IhPmVvz@jbhnW|L+SM$An1>^b|M_wt<QJm>uN_iujyIEil<
z1`V^6t{5v?xh$s_<z?AYOs#6CORAn$m*sN)lmNzXAi!)&wzXw-qNXdhX6ORK3=uw!
zA)MEW3@pR2Ctz;Qi6kJ#u;q-VYxY^1l{`EvLBv)O5l9lYK!_uRZgM+r6jg?<oGmL$
zlXCTnTqsjNQjs;Cp)YwY%d=0HWxbTn*`}tK#x`7qu!G@LGJD@d#sWMf(8n+wFx9Bq
zT18t?&GdBDzFgC(rwZ65VmJC3ws&wT;Bk)8O;usI8ko|!q1)<Bd+h!xa|p%``wE{f
zEUJn<MgbJLOpEaKqX_T-Ir!`Ja_EqjgnbwgX*mZOdaI_PsFpRUDW+k|){-S*2wNHU
z1|aPrBH)0CgV-O;T$ffH8Uaa$o+d5a%mkzu#2d18#i))uC=LB9N{8nqjNk~v{($V<
zpc@28i#Up>7~(}^Bg#*~Q78*%DT9!H2sQ+{Xrj`>b8oTcJFeDooZxkwWZ0Tl@|Lq*
z^G6w011o8&Mj&(l_gXrZ@-&{|#2anflV14(PBSD*s+}eEsL3UDRy8fsGe?g|!M4$-
zhQ>|F6_TADNq-nmZx|56xfaT~Uj)2B%0*5t$);QxH%KQakw*W#UYwOpZ?v~DI&IRR
z8*FDX(=nP@)D{*rrB=3Y#qbivrMVY$g><r*Gis(nd5+w>bMN~@KEvzDTxf<RbKQOZ
z(f(vEGQ(ncg(z#)3YMdvTvaojB1@RWl!$RmyQn!;Ir-A!T2xwu5}v0DHS40PtEOxl
zW&=J4Qu-!x!FNf?@NFQWTF;k2Qu){&v;iK1ck}$<n87S3|5ZAiN@b(KkF=p6-@fn+
zF^w>gb&h^wvouS%hSwPe0(4|XFRBZgt`-Hn5l0@^3Cx0~(@DA#h|xn-=F6vXMm|7I
z5@ZxO7<6QX^Gl=v+kK8QbW)X6b4-GY1%6nU7z9hTUGDx6n6?izpEqwu24(dhYi&OZ
zC}|CgytE~!v||z~ZV|Ni<F+wXtEi?%Wgkp#&e6Xo$*|yHP{mu^ok{DaJ4&Gi0`TZ-
zu~Fl}mz`RUOStLQa*Ie=A(haoWqKX;m*VB^E6y9~Sll~!m-~N@{E<r7rmWZ!-ggH-
zpfkM*uSW_2AGOG#>s-Jmq^Vh=x!d=ya*3=#w-!=8jUR^IVC;-i_U?uP-79PA^n#;H
z{`{H@`~qK!_!wW2zPJiFp_Nq(5-B5~1*K<*Un%MGD{{6vEiJgy5?IuBlO0_@>DfcQ
zy<|_S4l#8XU8(S|*!DB^s8V`{=pRP{+dbO>&sO>!p}D)*nX2QlR_k8uA&;)-K|~QI
z4_&F@kvX=GCx_Q@Xtl+8FTXB%=Eo@QD1CimxQ=7rp_^tM*&PYjacb3lt>f9|>@Zk@
zCZ54_-t=A6@;V~D`18k>APi^myl2(#S%nklo4$CN3@>iD>hp|3;dVzCHrqtnZ6<Kh
z7mWK3Co=89Uf#%P4`IafjwiC=p42)nwVS?*%bq`;7YDRGuLyFu;<MrI+HFM8{lK%i
zO*nIcoJ$=U9wC5VTf>{Dqr)SKOdZ8F+;HE@SJz<FVY$7x>1_=w^sM7{9Uq>K?vC<I
z!}ye*38GyWwT=HidjE|65=D$*6mys->NF^|3!iV$?*v)!Uw^cYJHOyYPq)(=g43*U
Sc7>b}9LR<Py7fEb(SHE8K+h!r

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/giYFh5BVhJ6OqEanK2GYCJ.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/giYFh5BVhJ6OqEanK2GYCJ.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..9091841906fc0d5cdbc39e1c04a746731f4ed394
GIT binary patch
literal 3590
zcmcImZF3V<6n<`#vgvkP+5l})f!6X8l3=KUR*DD~iqX&_p~V)lZZ_MnG}(>2n+iq2
zmr+Lrm9Ng|FL1_M$CA+*Kk&)%M>(FmyGb@7i!fqlvb*=*bI*CsbI*P5{p;`F{s3?Y
zcNj(tvydtot6H%rr>@8=vZa_>*-jNyJ*BS5#l<lJjA2iJ*|cnHE9z85S8UDD1%w#F
zd>TV&QOh&1G{cU7xmhQYfC$5;qnfVS$7oh;|C|I7-6Fz}By57vg%0$R+ess@GW29^
zSy?_Km(R<&BDKRMS<@K?Viz+UeX1zyg;dryHN7xVch!Nd42NTx2LhQ0@DRlSLn2_R
zQMR>`wyK(`nX-MZqEky1FeG9-1{t=raVg+Q&e2s>VYm<oY0}Vb^{PGbV91<;iT%FB
zXL46m#h#!5id>{cxcxW+JOl=Ro*srauq5olut>`}!q8tf4MnxAGn!%=wrnk15=PO@
zurq*Zj}ZZTMC`@x;L3H&ic=#X#?aR&3m2JyID>duw$2;nNr$D;e`RU^f`lXvFzgOM
z=LW48KuW|xJj2kHH|kM-3XVc3oTUt6`Vp!j$VG#draJc)YoYCGJ&Wgf9)}pZ7nMcJ
z*{+KR8P)<bX{bhE<^J!vv`yuCyub@@yk$>%=?gf*5G|;7hSZ}X7t}e`v`Eh!Jt76$
zOhYw|o0dx?J6mJ^FrMBpAcEsfCFhO^c!iXUoSc<Sxio2zP7sh<`-GmKlTEL;zt%fr
zQl}eiTP)o+nwZy?mNcbOw68_*D#fL_r*wsMGM_anrb0NA_io+$exJ|qQY_16SuEQ-
z;O`xbWy7;9g4d~JtxC>v^pmS<x?N-mXD}^d5;HDqPF4<HT3m}#3lrc4%22aTtGa5+
zwqe%jb10=Tkqf?Clni$Q3#$2i2`nmKbq8&LN2t36esIiUju-z0I-CkcBgc=l(IDTx
z@C*@+IFNPDe)N86mT(boF$@Rj$gG}Mmo#0?3wXN=i?~E&<}{s7($zqY9w9Ryp4u7t
z5IISZk>h00k+sRtRoXSpxt%mB{3Mc~VyTOcz5;__skU3aKLi5z(dGl@?a3fq|1sOv
z(||y0xWbcL=69B5lD92BFljo53#v(0CFuMnV$cq;jp<5BH8rARZ_H=xA@}c9GR!&C
z--XG8ShSwHqaa!!EssCL3RZaV_nZvJBwTZIS*2nvk$Pz5;x&eGe<~hsUvgeg+vMKI
z2i*S+@<-}no3dg{_|WbAs7VjqN)hl0-2fU(;jt{>(<Wm#q=3&!fituz+_rb|i)IYE
z<B&#b{OI&LBS)2@cas$87FtnfmK+uHqi!teE!-CI8NMbpa`kdbE2<cwRStue86o<j
z3n*QcMZWybo2a9AFOAbBm7aan+DUe#{Sf1K(Gw5-ip@V$i!!8V2mQMc#TL(Y*t3;>
zN5}kKY>QX%M6-22c92Kc^9VW#1;}e6InOrmbYcVh)|#C6^GlUyK1OgmY4oW?6=UC_
zmu4N<9u8G;c+LH+;>E`75LlEZ9>q)E^dWllJi`6>^T(zj49D=YXEo?qg`y`KzId7p
zC+n^TJfn_KtD{r*+k{(frf}L9jQb8n)2+c?t0US$9C6%T(M+f>zJar?rf=Y!=a1v!
zgtp=eBa8Ds8}6>vMg-j=JewQDGcSze@dJq@5&Y&l-Z|2lNJi6D<kxZ8{VHBqN4W~y
zZC$0WbzG-s6*sH+_(<pWPL4E$FX$PiqU)h|?Z1n@zofrJ5hEDKJQk>QY9%#<uj=KO
hBn$rQ>+7xJn_o~CoY!?;RvnIS&R}gO!?#X<=RYbW+Ts8J

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/jSukKkwOT4I3Qq8XRP8y9L.classdata b/src/main/resources/META-INF/native-image/net.minecraft/agent-extracted-predefined-classes/jSukKkwOT4I3Qq8XRP8y9L.classdata
new file mode 100644
index 0000000000000000000000000000000000000000..128be70e0ca252c6ccdef37679ff11d06409bb90
GIT binary patch
literal 3590
zcmcImZF3V<6n<`#vgvkP+5mk~f!6X8n$%DQsVyQ{C{|00gtoSbb+g%qZIj)&yQxqV
z-$or3RK7Z+zrY!59ZN=M{J<y2ALV%N?k3rUEYcA(lij`do_o%7o_p?d?_Yoa_6LAt
zxXaLQnAv3BSl4nnIk_UQ$(CYj1v{Bl^`yEc=ax<gU<?NX%%){qTT>^Bx?*dFE+E7Z
z=F=ELOIn73O)~5an45AU35YQ4IH~EHeTrtqj?76A(JCSgNx}{YEoeeJxg9q$Dnnb!
zmX*~Da^bR^&QUv@mo=TCD|Tgyqfh2!J)2C~rlx1dDz2Kao8fqD>Y+f!0z5>~#Sjme
zY7}fOudS<Qa;9KkD(ciy1@wsMMK{B)1}+6W$vL{NDh%_1kj4$&R<GM*4~NVt7(3!i
zd?vl3D)tx!P~;pf!kxzv;1MwR^Ykz@fF)r+`b1jJeumD1X(*~?UC<QMuw`r2k}!Z)
zhJ67{dyEJ;DB=(f1Xr$GR-76EF@}z6S-8jq3^It<Wb3j~7<X72_*a&WEJ{dVh~Yp0
zIyY#g0Fok(;u(gPj8Td5Q*abQ;Vfkk)7z+qAQx3uYU<outi^__^(>y_c^qSCT~d}T
zXS*&PW!MPJq^cT$mHWTv(lC|hae^1#NZp?F(ibqw5Y4Lg6sbp1&Z={&X_1~edPEAg
zlZMI~H!bH$c6P`7VLZKIKm@02O3ob-@G>bEIk_mCa(>((ogg6P_8C1hC!1bxXSsLA
zq)s>3p4eo=XktcNUe=Ui&b|@BD-@UJp3@c5$xO;9nhN1e+`oPQ`@=rNtFaWDWwBIy
zm%q0=mI}|Z2wtO-wTfxW(NC_blZ_%vxPWO9<Ct+-bFy;q(&Ac_T9^PYQihs!Ue#4o
zwhgmPpF=5)iCpmAqGY%mSWva+OJGs?syk={Y@_ZL`N1)ZIbQtpbU0;mMw%aK13|uh
z;Ta+taUkoQ{pf?zEa3{?Watafky$;XE^E4)5%5+EmT;BGOlvxwr0ankZ6h-up7I&_
z2sufRk>+I3k+s9nRoXSRxt%qN{3Mc~V!4HmzAS@askU3aKLi5z(dGl@?a3fq|1sP8
z(||y0SmDX7@;l2a$=fa;m`OT@v#Lo}dFcEmV$cq;jp<@uH8rB+P|RoSA@}c9GE6(u
z-+{@4ShSwHqaa!!EssCLBG!2DcbyD}CERdxS*K#nlX_@{+zo~ie<~hsUvgeg!{pw>
z``rI6@<-}no3dg{_|WbAs74RnN)hl0-2kdf;jt{>(;8zpq=3&!fv0FwxNYy^7o9Tb
zjzb!$@uSo0jGR<*-c3@VTWC?8S$0&+kGi^~w{b_rXZV`b$kodUEvKTNRyhn>W`yXA
zE}(Q(7Wwi!Z=#Og?KDo8RC;z$YaiK>_Cp-Jhql4cuh{uBwJ1Y+HqpNYQS9<;`#f9e
zcQh^B!=Awso~X6%#9s2~dhSOvp#XV}Cl=Tio{n$f@J5aEPJXHK%!dhXGmSnKFJbsQ
zw9~Ai-f*ad;~Va02`^M<hrpsV@g!dKruWdB=MnD2pFh?FVK{}CJgaWcDil3a^~KX<
zI9qYm<ry`F>K&bX&?a1OGlBEIVBB{oI$0m=)e54$#1Y5c5}gWl3~u3Kz3J<?<oV;c
zIHC2p!bst=&xX6Jw-G_N2+!sg@yrY3^x#lDK?J|CiML0a<B8~G37Jh?bH8%)n<$iE
zyRGZ=wTYYbEa8I^J|1oEZRSWr_=28MD!Mj$m;d|e`%C&u6fuGkEMSpJr(9A!_^MKV
i39{h7j*j*czWD_O!Fk=}W!2>P<_wl+GJNawH~#~-4BGAh

literal 0
HcmV?d00001

diff --git a/src/main/resources/META-INF/native-image/net.minecraft/predefined-classes-config.json b/src/main/resources/META-INF/native-image/net.minecraft/predefined-classes-config.json
new file mode 100644
index 0000000000000000000000000000000000000000..c2c189298ed6e659a800b6a714c97ad1b8f2e54e
--- /dev/null
+++ b/src/main/resources/META-INF/native-image/net.minecraft/predefined-classes-config.json
@@ -0,0 +1,18 @@
+[
+  {
+    "type":"agent-extracted",
+    "classes":[
+      { "nameInfo":"org/mozilla/javascript/gen/eval_2", "hash":"RWVWR4hWOa3NhlNLR1QLJ8" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_10", "hash":"D4Wvzn1eBR8kSBaJTQEbM9" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_8", "hash":"bsDdqrrsmOFNUuP0MecX8A" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_6", "hash":"OXdYVZySCGD3W707dvGnnK" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_1", "hash":"giYFh5BVhJ6OqEanK2GYCJ" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_3", "hash":"MDzY7F3fT2JEkjFAeVCmyG" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_4", "hash":"cRI89yMRAXBz8U2hgGvpx1" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_7", "hash":"jSukKkwOT4I3Qq8XRP8y9L" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_9", "hash":"ZhSA8zj5AE4Gb1H3Mzzl7F" },
+      { "nameInfo":"org/mozilla/javascript/gen/eval_5", "hash":"fxEUMBqfhz9v1FNpRKfL7B" }
+    ]
+  }
+]
+
diff --git a/src/main/resources/META-INF/native-image/net.minecraft/reachability-metadata.json b/src/main/resources/META-INF/native-image/net.minecraft/reachability-metadata.json
new file mode 100644
index 0000000000000000000000000000000000000000..724257134f41b07709bf5b4688b2ab30b24c73ae
--- /dev/null
+++ b/src/main/resources/META-INF/native-image/net.minecraft/reachability-metadata.json
@@ -0,0 +1,7781 @@
+{
+  "reflection": [
+    {
+      "type": "[B"
+    },
+    {
+      "type": "[C"
+    },
+    {
+      "type": "[D"
+    },
+    {
+      "type": "[F"
+    },
+    {
+      "type": "[I"
+    },
+    {
+      "type": "[J"
+    },
+    {
+      "type": "[Lca.spottedleaf.concurrentutil.executor.thread.PrioritisedThreadPool$ExecutorGroup$ThreadPoolExecutor;"
+    },
+    {
+      "type": "[Lca.spottedleaf.concurrentutil.executor.thread.PrioritisedThreadPool$ExecutorGroup;"
+    },
+    {
+      "type": "[Lca.spottedleaf.concurrentutil.executor.thread.PrioritisedThreadPool$PrioritisedThread;"
+    },
+    {
+      "type": "[Lcom.sun.jna.platform.win32.WinNT$GROUP_AFFINITY;"
+    },
+    {
+      "type": "[Lcom.sun.jna.platform.win32.WinNT$PROCESSOR_GROUP_INFO;"
+    },
+    {
+      "type": "[Ljava.lang.String;"
+    },
+    {
+      "type": "[Ljavax.management.openmbean.CompositeData;"
+    },
+    {
+      "type": "[Lnet.minecraft.core.Direction$Axis;"
+    },
+    {
+      "type": "[Lnet.minecraft.core.Direction;"
+    },
+    {
+      "type": "[Lnet.minecraft.core.FrontAndTop;"
+    },
+    {
+      "type": "[Lnet.minecraft.server.level.ServerPlayer;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.entity.Entity;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.entity.trialspawner.TrialSpawnerState;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.entity.vault.VaultState;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.AttachFace;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.BambooLeaves;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.BedPart;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.BellAttachType;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.ChestType;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.ComparatorMode;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.CreakingHeartState;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.DoorHingeSide;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.DoubleBlockHalf;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.DripstoneThickness;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.Half;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.NoteBlockInstrument;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.PistonType;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.RailShape;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.RedstoneSide;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.SculkSensorPhase;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.SlabType;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.StairsShape;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.StructureMode;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.TestBlockMode;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.Tilt;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.block.state.properties.WallSide;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.chunk.LevelChunk;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.levelgen.Beardifier$Rigid;"
+    },
+    {
+      "type": "[Lnet.minecraft.world.level.levelgen.structure.pools.JigsawJunction;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.Appender;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.Filter;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.appender.rolling.TriggeringPolicy;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.appender.rolling.action.Action;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.config.AppenderRef;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.config.LoggerConfig;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.config.Property;"
+    },
+    {
+      "type": "[Lorg.apache.logging.log4j.core.layout.PatternMatch;"
+    },
+    {
+      "type": "[Lorg.bxteam.divinemc.server.chunk.TheChunkSystem$ExecutorGroup$ThreadPoolExecutor;"
+    },
+    {
+      "type": "[Lorg.bxteam.divinemc.server.chunk.TheChunkSystem$ExecutorGroup;"
+    },
+    {
+      "type": "[S"
+    },
+    {
+      "type": "[Z"
+    },
+    {
+      "type": "[[[Ljava.util.function.Predicate;"
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.collection.MultiThreadedQueue",
+      "fields": [
+        {
+          "name": "head"
+        },
+        {
+          "name": "tail"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.collection.MultiThreadedQueue$LinkedNode",
+      "fields": [
+        {
+          "name": "element"
+        },
+        {
+          "name": "next"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.executor.queue.PrioritisedTaskQueue$PrioritisedQueuedTask$Holder",
+      "fields": [
+        {
+          "name": "removed"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.executor.thread.PrioritisedQueueExecutorThread",
+      "fields": [
+        {
+          "name": "threadParked"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.map.ConcurrentLong2ReferenceChainedHashTable",
+      "fields": [
+        {
+          "name": "threshold"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.map.ConcurrentLong2ReferenceChainedHashTable$TableEntry",
+      "fields": [
+        {
+          "name": "next"
+        },
+        {
+          "name": "value"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.map.SWMRLong2ObjectHashTable",
+      "fields": [
+        {
+          "name": "size"
+        },
+        {
+          "name": "table"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.concurrentutil.map.SWMRLong2ObjectHashTable$TableEntry",
+      "fields": [
+        {
+          "name": "next"
+        },
+        {
+          "name": "value"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.dataconverter.minecraft.MCVersions",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.player.RegionizedPlayerChunkLoader$ViewDistanceHolder",
+      "fields": [
+        {
+          "name": "viewDistances"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.PriorityHolder",
+      "fields": [
+        {
+          "name": "priority"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.ThreadedTicketLevelPropagator$UpdateQueue",
+      "fields": [
+        {
+          "name": "head"
+        },
+        {
+          "name": "tail"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.ThreadedTicketLevelPropagator$UpdateQueue$UpdateQueueNode",
+      "fields": [
+        {
+          "name": "next"
+        },
+        {
+          "name": "section"
+        },
+        {
+          "name": "updating"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.task.ChunkFullTask",
+      "fields": [
+        {
+          "name": "scheduled"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.task.ChunkLoadTask$CallbackDataLoadTask",
+      "fields": [
+        {
+          "name": "completed"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.task.ChunkProgressionTask",
+      "fields": [
+        {
+          "name": "completed"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.task.ChunkUpgradeGenericStatusTask",
+      "fields": [
+        {
+          "name": "scheduled"
+        }
+      ]
+    },
+    {
+      "type": "ca.spottedleaf.moonrise.patches.chunk_system.scheduling.task.GenericDataLoadTask$LoadDataFromDiskTask",
+      "fields": [
+        {
+          "name": "priority"
+        }
+      ]
+    },
+    {
+      "type": "com.destroystokyo.paper.VersionHistoryManager$VersionData",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.fasterxml.jackson.core.JsonParser"
+    },
+    {
+      "type": "com.fasterxml.jackson.databind.JsonNode"
+    },
+    {
+      "type": "com.fasterxml.jackson.databind.ObjectMapper"
+    },
+    {
+      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
+    },
+    {
+      "type": "com.google.common.util.concurrent.AbstractFuture",
+      "fields": [
+        {
+          "name": "listeners"
+        },
+        {
+          "name": "value"
+        },
+        {
+          "name": "waiters"
+        }
+      ]
+    },
+    {
+      "type": "com.google.common.util.concurrent.AbstractFuture$Waiter",
+      "fields": [
+        {
+          "name": "next"
+        },
+        {
+          "name": "thread"
+        }
+      ]
+    },
+    {
+      "type": "com.mojang.authlib.yggdrasil.ProfileActionType",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.mojang.authlib.yggdrasil.YggdrasilServicesKeyInfo$KeyData",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.nio.ByteBuffer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.mojang.authlib.yggdrasil.YggdrasilServicesKeyInfo$KeySetResponse",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.util.List",
+            "java.util.List"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.mojang.authlib.yggdrasil.response.HasJoinedMinecraftServerResponse",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.util.UUID",
+            "com.mojang.authlib.properties.PropertyMap",
+            "java.util.Set"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.mojang.authlib.yggdrasil.response.ProfileAction",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.mojang.logging.plugins.LegacyXMLLayout"
+    },
+    {
+      "type": "com.mojang.logging.plugins.ListenerLogAppender"
+    },
+    {
+      "type": "com.mojang.logging.plugins.QueueLogAppender",
+      "methods": [
+        {
+          "name": "createAppender",
+          "parameterTypes": [
+            "java.lang.String",
+            "java.lang.String",
+            "org.apache.logging.log4j.core.Layout",
+            "org.apache.logging.log4j.core.Filter",
+            "java.lang.String"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.AESCipher$General",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.ARCFOURCipher",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.DESCipher",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.DESedeCipher",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.DHParameters",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.RSACipher",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.CallbackProxy"
+    },
+    {
+      "type": "com.sun.jna.NativeLong",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.Union",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.BaseTSD$DWORD_PTR",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.BaseTSD$SIZE_T",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.BaseTSD$ULONG_PTR",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.COM.Dispatch",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.COM.Dispatch$ByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.COM.Unknown",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.COM.Unknown$ByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.COM.Wbemcli$IWbemServices",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Guid$CLSID",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Guid$GUID",
+      "allDeclaredFields": true,
+      "allPublicFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$CURRENCY",
+      "allDeclaredFields": true,
+      "allPublicFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$CURRENCY$_CURRENCY",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$DATE",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$DECIMAL",
+      "allDeclaredFields": true,
+      "allPublicFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$DECIMAL$_DECIMAL1",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$DECIMAL$_DECIMAL1$_DECIMAL1_DECIMAL",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$DECIMAL$_DECIMAL2",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$DECIMAL$_DECIMAL2$_DECIMAL2_DECIMAL",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$VARIANT_BOOL",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$VARIANT_BOOLByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.OaIdl$_VARIANT_BOOLByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Pdh$PDH_RAW_COUNTER",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Psapi",
+      "allPublicFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Psapi$PERFORMANCE_INFORMATION",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Variant$VARIANT",
+      "allDeclaredFields": true,
+      "allPublicFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Variant$VARIANT$ByReference",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Variant$VARIANT$_VARIANT",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Variant$VARIANT$_VARIANT$__VARIANT",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.Variant$VARIANT$_VARIANT$__VARIANT$BRECORD",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WTypes$BSTR",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WTypes$BSTRByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WTypes$VARTYPE",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinBase$FILETIME",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinBase$SYSTEM_INFO",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinBase$SYSTEM_INFO$PI",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinBase$SYSTEM_INFO$UNION",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$BYTE",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$CHAR",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$CHARByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$DWORD",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$DWORDByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$LONG",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$LONGByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$LONGLONG",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$LONGLONGByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$PVOID",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$SCODE",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$SCODEByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$SHORT",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$UINT",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$UINTByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$ULONG",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$ULONGByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$ULONGLONG",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$ULONGLONGByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$USHORT",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$USHORTByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinDef$WORD",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$CACHE_RELATIONSHIP",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$GROUP_AFFINITY",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$GROUP_RELATIONSHIP",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$HANDLE",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$HRESULT",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$NUMA_NODE_RELATIONSHIP",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$OSVERSIONINFOEX",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$PROCESSOR_GROUP_INFO",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "com.sun.jna.Pointer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$PROCESSOR_RELATIONSHIP",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinNT$SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinReg$HKEY",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.platform.win32.WinReg$HKEYByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.ByteByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.DoubleByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.FloatByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.IntByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.LongByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.PointerByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.ptr.ShortByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.win32.DLLCallback"
+    },
+    {
+      "type": "com.sun.management.GarbageCollectorMXBean"
+    },
+    {
+      "type": "com.sun.management.GcInfo"
+    },
+    {
+      "type": "com.sun.management.HotSpotDiagnosticMXBean"
+    },
+    {
+      "type": "com.sun.management.OperatingSystemMXBean",
+      "methods": [
+        {
+          "name": "getProcessCpuLoad",
+          "parameterTypes": []
+        },
+        {
+          "name": "getSystemCpuLoad",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.management.ThreadMXBean"
+    },
+    {
+      "type": "com.sun.management.VMOption"
+    },
+    {
+      "type": "com.sun.management.internal.GarbageCollectorExtImpl"
+    },
+    {
+      "type": "com.sun.management.internal.HotSpotDiagnostic"
+    },
+    {
+      "type": "com.sun.management.internal.HotSpotThreadImpl"
+    },
+    {
+      "type": "com.sun.management.internal.OperatingSystemImpl"
+    },
+    {
+      "type": "com.sun.management.internal.VirtualThreadSchedulerImpls$VirtualThreadSchedulerImpl"
+    },
+    {
+      "type": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.netty.bootstrap.ServerBootstrap$1"
+    },
+    {
+      "type": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor"
+    },
+    {
+      "type": "io.netty.buffer.AbstractByteBufAllocator"
+    },
+    {
+      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
+      "fields": [
+        {
+          "name": "refCnt"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.channel.AbstractChannelHandlerContext",
+      "fields": [
+        {
+          "name": "handlerState"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.channel.ChannelOutboundBuffer",
+      "fields": [
+        {
+          "name": "totalPendingSize"
+        },
+        {
+          "name": "unwritable"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.channel.DefaultChannelConfig",
+      "fields": [
+        {
+          "name": "autoRead"
+        },
+        {
+          "name": "writeBufferWaterMark"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.channel.DefaultChannelPipeline",
+      "fields": [
+        {
+          "name": "estimatorHandle"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
+    },
+    {
+      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
+    },
+    {
+      "type": "io.netty.channel.DefaultFileRegion"
+    },
+    {
+      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
+    },
+    {
+      "type": "io.netty.channel.socket.nio.NioServerSocketChannel",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.netty.channel.unix.PeerCredentials"
+    },
+    {
+      "type": "io.netty.handler.flow.FlowControlHandler"
+    },
+    {
+      "type": "io.netty.handler.flush.FlushConsolidationHandler"
+    },
+    {
+      "type": "io.netty.handler.timeout.ReadTimeoutHandler"
+    },
+    {
+      "type": "io.netty.util.AbstractReferenceCounted",
+      "fields": [
+        {
+          "name": "refCnt"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.DefaultAttributeMap",
+      "fields": [
+        {
+          "name": "attributes"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
+      "fields": [
+        {
+          "name": "attributeMap"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.Recycler$DefaultHandle",
+      "fields": [
+        {
+          "name": "state"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.ReferenceCountUtil"
+    },
+    {
+      "type": "io.netty.util.concurrent.DefaultPromise",
+      "fields": [
+        {
+          "name": "result"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
+      "fields": [
+        {
+          "name": "state"
+        },
+        {
+          "name": "threadProperties"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
+      "fields": [
+        {
+          "name": "producerLimit"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
+      "fields": [
+        {
+          "name": "consumerIndex"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
+      "fields": [
+        {
+          "name": "producerIndex"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueConsumerIndexField",
+      "fields": [
+        {
+          "name": "consumerIndex"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerIndexField",
+      "fields": [
+        {
+          "name": "producerIndex"
+        }
+      ]
+    },
+    {
+      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerLimitField",
+      "fields": [
+        {
+          "name": "producerLimit"
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.PaperServerInternalAPIBridge"
+    },
+    {
+      "type": "io.papermc.paper.ServerBuildInfoImpl"
+    },
+    {
+      "type": "io.papermc.paper.adventure.providers.ComponentLoggerProviderImpl"
+    },
+    {
+      "type": "io.papermc.paper.adventure.providers.LegacyComponentSerializerProviderImpl"
+    },
+    {
+      "type": "io.papermc.paper.adventure.providers.MiniMessageProviderImpl"
+    },
+    {
+      "type": "io.papermc.paper.adventure.providers.PlainTextComponentSerializerProviderImpl"
+    },
+    {
+      "type": "io.papermc.paper.configuration.ConfigurationPart",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Anticheat",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Anticheat$Obfuscation",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$Anticheat"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Anticheat$Obfuscation$Items",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$Anticheat$Obfuscation"
+          ]
+        },
+        {
+          "name": "bindDataSanitizer",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$BlockUpdates",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$ChunkLoadingAdvanced",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$ChunkLoadingBasic",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$ChunkSystem",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        },
+        {
+          "name": "postProcess",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Collisions",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Commands",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Console",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$ItemValidation",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$ItemValidation$Book",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$ItemValidation"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$ItemValidation$BookSize",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$ItemValidation"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Logging",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Messages",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Messages$Kick",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$Messages"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Misc",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Misc$ChatThreads",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$Misc"
+          ]
+        },
+        {
+          "name": "postProcess",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$PacketLimiter",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$PacketLimiter$PacketLimit",
+      "fields": [
+        {
+          "name": "action"
+        },
+        {
+          "name": "interval"
+        },
+        {
+          "name": "maxPacketRate"
+        }
+      ],
+      "methods": [
+        {
+          "name": "action",
+          "parameterTypes": []
+        },
+        {
+          "name": "interval",
+          "parameterTypes": []
+        },
+        {
+          "name": "maxPacketRate",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$PlayerAutoSave",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Proxies",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Proxies$BungeeCord",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$Proxies"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Proxies$Velocity",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration$Proxies"
+          ]
+        },
+        {
+          "name": "postProcess",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Scoreboards",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$SpamLimiter",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Spark",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$UnsupportedSettings",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.GlobalConfiguration$Watchdog",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.GlobalConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Anticheat",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Anticheat$AntiXray",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Anticheat"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Chunks",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Collisions",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$CommandBlocks",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$ArmorStands",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior$MobsCanAlwaysPickUpLoot",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior$PillagerPatrols",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior$PillagerPatrols$SpawnDelay",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior$PillagerPatrols"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior$PillagerPatrols$Start",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Behavior$PillagerPatrols"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Markers",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$MobEffects",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$MobEffects$ImmuneToWitherEffect",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$MobEffects"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Sniffer",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        },
+        {
+          "name": "precomputeDespawnDistances",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$AltItemDespawnRate",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$DespawnRangePair",
+      "fields": [
+        {
+          "name": "hard"
+        },
+        {
+          "name": "soft"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.type.DespawnRange",
+            "io.papermc.paper.configuration.type.DespawnRange"
+          ]
+        },
+        {
+          "name": "hard",
+          "parameterTypes": []
+        },
+        {
+          "name": "soft",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$DuplicateUUID",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$SlimeSpawnHeight",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$SlimeSpawnHeight$SlimeChunk",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$SlimeSpawnHeight"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$SlimeSpawnHeight$SurfaceSpawnableSlimeBiome",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$SlimeSpawnHeight"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$SpawningThrottle",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$WanderingTrader",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning$WaterAnimalSpawnHeight",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities$Spawning"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Entities$TrackingRangeY",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Entities"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Environment",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Environment$FrostedIce",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Environment"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Environment$FrostedIce$Delay",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Environment$FrostedIce"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Environment$TreasureMaps",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$Environment"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$FeatureSeeds",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        },
+        {
+          "name": "postProcess",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$FishingTimeRange",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Fixes",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Hopper",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Lootables",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Maps",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$MaxGrowthHeight",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$MaxGrowthHeight$Bamboo",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration$MaxGrowthHeight"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Misc",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Scoreboards",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$Spawn",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$TickRates",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.WorldConfiguration$UnsupportedSettings",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "io.papermc.paper.configuration.WorldConfiguration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.configuration.legacy.MaxEntityCollisionsInitializer",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.String",
+            "org.spigotmc.SpigotWorldConfig"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.console.StripANSIConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.config.Configuration",
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.datacomponent.DataComponentTypes"
+    },
+    {
+      "type": "io.papermc.paper.logging.ExtraClassInfoRewritePolicy",
+      "methods": [
+        {
+          "name": "createPolicy",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.logging.StacktraceDeobfuscatingRewritePolicy",
+      "methods": [
+        {
+          "name": "createPolicy",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.plugin.lifecycle.event.types.LifecycleEventTypeProviderImpl"
+    },
+    {
+      "type": "io.papermc.paper.pluginremap.RemappedPluginIndex$State",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "io.papermc.paper.registry.PaperRegistryAccess"
+    },
+    {
+      "type": "io.papermc.paper.registry.RegistryKey",
+      "allPublicFields": true
+    },
+    {
+      "type": "io.papermc.paper.util.StacktraceDeobfuscator",
+      "fields": [
+        {
+          "name": "INSTANCE"
+        }
+      ],
+      "methods": [
+        {
+          "name": "deobfuscateThrowable",
+          "parameterTypes": [
+            "java.lang.Throwable"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "io.papermc.paper.util.sanitizer.ItemObfuscationBinding$AssetObfuscationConfiguration",
+      "fields": [
+        {
+          "name": "alsoObfuscate"
+        },
+        {
+          "name": "dontObfuscate"
+        },
+        {
+          "name": "sanitizeCount"
+        }
+      ],
+      "methods": [
+        {
+          "name": "alsoObfuscate",
+          "parameterTypes": []
+        },
+        {
+          "name": "dontObfuscate",
+          "parameterTypes": []
+        },
+        {
+          "name": "sanitizeCount",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "jakarta.servlet.Servlet"
+    },
+    {
+      "type": "java.beans.Introspector"
+    },
+    {
+      "type": "java.io.File"
+    },
+    {
+      "type": "java.io.FileDescriptor"
+    },
+    {
+      "type": "java.io.ObjectInputStream"
+    },
+    {
+      "type": "java.io.ObjectOutputStream"
+    },
+    {
+      "type": "java.lang.Boolean",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Byte",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Character",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Class",
+      "methods": [
+        {
+          "name": "getRecordComponents",
+          "parameterTypes": []
+        },
+        {
+          "name": "isRecord",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Deprecated"
+    },
+    {
+      "type": "java.lang.Double",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Float",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Integer",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Long",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Number"
+    },
+    {
+      "type": "java.lang.Object",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "java.lang.ProcessBuilder$RedirectPipeImpl"
+    },
+    {
+      "type": "java.lang.ProcessHandle",
+      "methods": [
+        {
+          "name": "current",
+          "parameterTypes": []
+        },
+        {
+          "name": "pid",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Record",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "java.lang.Short",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.StackTraceElement"
+    },
+    {
+      "type": "java.lang.String",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Throwable"
+    },
+    {
+      "type": "java.lang.Void",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.invoke.MethodHandle"
+    },
+    {
+      "type": "java.lang.invoke.MethodHandles"
+    },
+    {
+      "type": "java.lang.invoke.MethodHandles$Lookup"
+    },
+    {
+      "type": "java.lang.invoke.MethodType"
+    },
+    {
+      "type": "java.lang.management.BufferPoolMXBean"
+    },
+    {
+      "type": "java.lang.management.ClassLoadingMXBean"
+    },
+    {
+      "type": "java.lang.management.CompilationMXBean"
+    },
+    {
+      "type": "java.lang.management.LockInfo"
+    },
+    {
+      "type": "java.lang.management.ManagementFactory",
+      "methods": [
+        {
+          "name": "getRuntimeMXBean",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.management.MemoryMXBean"
+    },
+    {
+      "type": "java.lang.management.MemoryManagerMXBean"
+    },
+    {
+      "type": "java.lang.management.MemoryPoolMXBean"
+    },
+    {
+      "type": "java.lang.management.MemoryUsage"
+    },
+    {
+      "type": "java.lang.management.MonitorInfo"
+    },
+    {
+      "type": "java.lang.management.PlatformLoggingMXBean"
+    },
+    {
+      "type": "java.lang.management.RuntimeMXBean",
+      "methods": [
+        {
+          "name": "getInputArguments",
+          "parameterTypes": []
+        },
+        {
+          "name": "getStartTime",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.management.ThreadInfo"
+    },
+    {
+      "type": "java.lang.reflect.Method",
+      "methods": [
+        {
+          "name": "isDefault",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.reflect.RecordComponent",
+      "methods": [
+        {
+          "name": "getName",
+          "parameterTypes": []
+        },
+        {
+          "name": "getType",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.math.BigDecimal"
+    },
+    {
+      "type": "java.math.BigInteger"
+    },
+    {
+      "type": "java.nio.Bits"
+    },
+    {
+      "type": "java.nio.Buffer",
+      "fields": [
+        {
+          "name": "address"
+        }
+      ]
+    },
+    {
+      "type": "java.nio.ByteBuffer"
+    },
+    {
+      "type": "java.nio.DirectByteBuffer"
+    },
+    {
+      "type": "java.nio.channels.FileChannel"
+    },
+    {
+      "type": "java.nio.channels.spi.SelectorProvider"
+    },
+    {
+      "type": "java.security.AlgorithmParametersSpi"
+    },
+    {
+      "type": "java.security.KeyStoreSpi"
+    },
+    {
+      "type": "java.security.MessageDigestSpi"
+    },
+    {
+      "type": "java.security.interfaces.ECPrivateKey"
+    },
+    {
+      "type": "java.security.interfaces.ECPublicKey"
+    },
+    {
+      "type": "java.security.interfaces.RSAPrivateKey"
+    },
+    {
+      "type": "java.security.interfaces.RSAPublicKey"
+    },
+    {
+      "type": "java.sql.Date"
+    },
+    {
+      "type": "java.sql.Time"
+    },
+    {
+      "type": "java.sql.Timestamp"
+    },
+    {
+      "type": "java.text.SimpleDateFormat"
+    },
+    {
+      "type": "java.util.Date"
+    },
+    {
+      "type": "java.util.logging.LogManager",
+      "methods": [
+        {
+          "name": "getLoggingMXBean",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.util.logging.LoggingMXBean"
+    },
+    {
+      "type": "java.util.zip.CRC32C",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "javax.management.MBeanOperationInfo"
+    },
+    {
+      "type": "javax.management.MBeanServerBuilder",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "javax.management.ObjectName"
+    },
+    {
+      "type": "javax.management.StandardEmitterMBean"
+    },
+    {
+      "type": "javax.management.openmbean.CompositeData"
+    },
+    {
+      "type": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
+    },
+    {
+      "type": "javax.management.openmbean.TabularData"
+    },
+    {
+      "type": "javax.servlet.Servlet"
+    },
+    {
+      "type": "jdk.internal.jrtfs.JrtFileSystemProvider"
+    },
+    {
+      "type": "jdk.internal.misc.Unsafe",
+      "methods": [
+        {
+          "name": "getUnsafe",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "jdk.management.VirtualThreadSchedulerMXBean"
+    },
+    {
+      "type": "jdk.management.jfr.ConfigurationInfo"
+    },
+    {
+      "type": "jdk.management.jfr.EventTypeInfo"
+    },
+    {
+      "type": "jdk.management.jfr.FlightRecorderMXBean"
+    },
+    {
+      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
+    },
+    {
+      "type": "jdk.management.jfr.RecordingInfo"
+    },
+    {
+      "type": "jdk.management.jfr.SettingDescriptorInfo"
+    },
+    {
+      "type": "libcore.io.Memory"
+    },
+    {
+      "type": "me.lucko.spark.api.SparkProvider",
+      "methods": [
+        {
+          "name": "set",
+          "parameterTypes": [
+            "me.lucko.spark.api.Spark"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "me.lucko.spark.paper.common.monitor.cpu.CpuMonitor$OperatingSystemMXBean"
+    },
+    {
+      "type": "me.lucko.spark.paper.lib.protobuf.DescriptorMessageInfoFactory"
+    },
+    {
+      "type": "me.lucko.spark.paper.lib.protobuf.GeneratedMessage"
+    },
+    {
+      "type": "me.lucko.spark.paper.lib.protobuf.ListFieldSchemaFull"
+    },
+    {
+      "type": "me.lucko.spark.paper.lib.protobuf.MapFieldSchemaFull"
+    },
+    {
+      "type": "me.lucko.spark.paper.lib.protobuf.NewInstanceSchemaFull"
+    },
+    {
+      "type": "me.lucko.spark.paper.lib.protobuf.UnknownFieldSetSchema"
+    },
+    {
+      "type": "me.lucko.spark.paper.proto.SparkProtos$WindowStatistics",
+      "fields": [
+        {
+          "name": "chunks_"
+        },
+        {
+          "name": "cpuProcess_"
+        },
+        {
+          "name": "cpuSystem_"
+        },
+        {
+          "name": "duration_"
+        },
+        {
+          "name": "endTime_"
+        },
+        {
+          "name": "entities_"
+        },
+        {
+          "name": "msptMax_"
+        },
+        {
+          "name": "msptMedian_"
+        },
+        {
+          "name": "players_"
+        },
+        {
+          "name": "startTime_"
+        },
+        {
+          "name": "ticks_"
+        },
+        {
+          "name": "tileEntities_"
+        },
+        {
+          "name": "tps_"
+        }
+      ]
+    },
+    {
+      "type": "net.minecraft.network.CipherDecoder"
+    },
+    {
+      "type": "net.minecraft.network.CipherEncoder"
+    },
+    {
+      "type": "net.minecraft.network.CompressionDecoder"
+    },
+    {
+      "type": "net.minecraft.network.CompressionEncoder"
+    },
+    {
+      "type": "net.minecraft.network.Connection"
+    },
+    {
+      "type": "net.minecraft.network.Connection$2"
+    },
+    {
+      "type": "net.minecraft.network.PacketBundleUnpacker"
+    },
+    {
+      "type": "net.minecraft.network.PacketDecoder"
+    },
+    {
+      "type": "net.minecraft.network.PacketEncoder"
+    },
+    {
+      "type": "net.minecraft.network.UnconfiguredPipelineHandler$Inbound"
+    },
+    {
+      "type": "net.minecraft.network.UnconfiguredPipelineHandler$Outbound"
+    },
+    {
+      "type": "net.minecraft.network.Varint21FrameDecoder"
+    },
+    {
+      "type": "net.minecraft.network.Varint21LengthFieldPrepender"
+    },
+    {
+      "type": "net.minecraft.server.network.LegacyQueryHandler"
+    },
+    {
+      "type": "net.minecraft.server.network.ServerConnectionListener$1"
+    },
+    {
+      "type": "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoldingPatternPhase",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "net.minecraft.world.entity.boss.enderdragon.EnderDragon"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoverPhase",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "net.minecraft.world.entity.boss.enderdragon.EnderDragon"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "net.minecraft.world.entity.npc.VillagerTrades"
+    },
+    {
+      "type": "net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor"
+    },
+    {
+      "type": "net.minecraft.world.level.levelgen.structure.templatesystem.CappedProcessor"
+    },
+    {
+      "type": "net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor"
+    },
+    {
+      "type": "net.minecraft.world.level.levelgen.structure.templatesystem.ProtectedBlockProcessor"
+    },
+    {
+      "type": "net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor"
+    },
+    {
+      "type": "net.minecrell.terminalconsole.HighlightErrorConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.config.Configuration",
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "net.minecrell.terminalconsole.MinecraftFormattingConverter"
+    },
+    {
+      "type": "net.minecrell.terminalconsole.TCALookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "net.minecrell.terminalconsole.TerminalConsoleAppender",
+      "methods": [
+        {
+          "name": "createAppender",
+          "parameterTypes": [
+            "java.lang.String",
+            "org.apache.logging.log4j.core.Filter",
+            "org.apache.logging.log4j.core.Layout",
+            "boolean"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "net.minecrell.terminalconsole.util.LoggerNamePatternSelector",
+      "methods": [
+        {
+          "name": "createSelector",
+          "parameterTypes": [
+            "java.lang.String",
+            "org.apache.logging.log4j.core.layout.PatternMatch[]",
+            "boolean",
+            "boolean",
+            "boolean",
+            "org.apache.logging.log4j.core.config.Configuration"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.AbstractAppender$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.AppenderSet"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.AsyncAppender",
+      "methods": [
+        {
+          "name": "newBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.AsyncAppender$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.ConsoleAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.CountingNoOpAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.FailoverAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.FailoversPlugin"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.FileAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.HttpAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.NullAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.OutputStreamAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.RollingFileAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender",
+      "methods": [
+        {
+          "name": "newBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.SmtpAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.SocketAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.SyslogAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.WriterAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.db.ColumnMapping"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.mom.JmsAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender",
+      "methods": [
+        {
+          "name": "createAppender",
+          "parameterTypes": [
+            "java.lang.String",
+            "java.lang.String",
+            "org.apache.logging.log4j.core.config.AppenderRef[]",
+            "org.apache.logging.log4j.core.config.Configuration",
+            "org.apache.logging.log4j.core.appender.rewrite.RewritePolicy",
+            "org.apache.logging.log4j.core.Filter"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy",
+      "methods": [
+        {
+          "name": "createPolicy",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy",
+      "methods": [
+        {
+          "name": "newBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy",
+      "methods": [
+        {
+          "name": "createPolicy",
+          "parameterTypes": [
+            "long"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.RollingFileManager",
+      "fields": [
+        {
+          "name": "patternProcessor"
+        },
+        {
+          "name": "rolloverStrategy"
+        },
+        {
+          "name": "triggeringPolicy"
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy",
+      "methods": [
+        {
+          "name": "newBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAll"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAny"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfNot"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.routing.Route"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.routing.Routes"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.appender.routing.RoutingAppender"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.AsyncLoggerConfig"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.AsyncWaitStrategyFactoryConfig"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.async.LinkedTransferQueueFactory"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.AppenderControlArraySet",
+      "fields": [
+        {
+          "name": "appenderArray"
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.AppenderRef",
+      "methods": [
+        {
+          "name": "createAppenderRef",
+          "parameterTypes": [
+            "java.lang.String",
+            "org.apache.logging.log4j.Level",
+            "org.apache.logging.log4j.core.Filter"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.AppendersPlugin",
+      "methods": [
+        {
+          "name": "createAppenders",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.Appender[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.CustomLevelConfig"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.CustomLevels"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.DefaultAdvertiser"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.HttpWatcher"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.LoggerConfig"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger",
+      "methods": [
+        {
+          "name": "newRootBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.LoggersPlugin",
+      "methods": [
+        {
+          "name": "createLoggers",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.config.LoggerConfig[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.PropertiesPlugin"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.Property"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.ScriptsPlugin"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.arbiters.ClassArbiter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.arbiters.DefaultArbiter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.arbiters.EnvironmentArbiter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.arbiters.ScriptArbiter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.arbiters.SelectArbiter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.visitors.PluginConfigurationVisitor",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.AbstractFilterable$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.BurstFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.CompositeFilter",
+      "methods": [
+        {
+          "name": "createFilters",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.Filter[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.DenyAllFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.LevelMatchFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.LevelRangeFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.MapFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.MarkerFilter",
+      "methods": [
+        {
+          "name": "createFilter",
+          "parameterTypes": [
+            "java.lang.String",
+            "org.apache.logging.log4j.core.Filter$Result",
+            "org.apache.logging.log4j.core.Filter$Result"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.MutableThreadContextMapFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.NoMarkerFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.RegexFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.ScriptFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.StringMatchFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.StructuredDataFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.ThresholdFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.filter.TimeFilter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.impl.Log4jProvider"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.impl.ThreadContextDataProvider"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.CsvLogEventLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.CsvParameterLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.GelfLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.HtmlLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.JsonLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.LevelPatternSelector"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.LoggerFields"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.MarkerPatternSelector"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.MessageLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.PatternLayout",
+      "methods": [
+        {
+          "name": "newBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.PatternLayout$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.PatternMatch",
+      "methods": [
+        {
+          "name": "newBuilder",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.PatternMatch$Builder",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.Rfc5424Layout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.ScriptPatternSelector"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.SerializedLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.SyslogLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.XmlLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.layout.YamlLayout"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.ContextMapLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.DateLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.EnvironmentLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.EventLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.JavaLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.JndiLookup"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.Log4jLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.LowerLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.MainMapLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.MapLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.MarkerLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.StructuredDataLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.lookup.UpperLookup",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.SocketAddress"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.SocketOptions"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.SocketPerformancePreferences"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.ssl.SslConfiguration"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.DatePatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.config.Configuration",
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.FileDatePatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.HighlightConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.config.Configuration",
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.IntegerPatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.LevelPatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MapPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MaxLengthConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MdcPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MessagePatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "org.apache.logging.log4j.core.config.Configuration",
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.NdcPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.RegexReplacement"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.RepeatPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.StyleConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
+      "methods": [
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.UuidPatternConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.script.Script"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.script.ScriptFile"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.script.ScriptRef"
+    },
+    {
+      "type": "org.apache.logging.log4j.core.util.KeyValuePair"
+    },
+    {
+      "type": "org.apache.logging.log4j.util.EnvironmentPropertySource"
+    },
+    {
+      "type": "org.apache.logging.log4j.util.SystemPropertiesPropertySource"
+    },
+    {
+      "type": "org.apache.logging.slf4j.SLF4JServiceProvider"
+    },
+    {
+      "type": "org.bukkit.Art"
+    },
+    {
+      "type": "org.bukkit.Fluid"
+    },
+    {
+      "type": "org.bukkit.GameEvent"
+    },
+    {
+      "type": "org.bukkit.JukeboxSong"
+    },
+    {
+      "type": "org.bukkit.MusicInstrument"
+    },
+    {
+      "type": "org.bukkit.Registry"
+    },
+    {
+      "type": "org.bukkit.Sound"
+    },
+    {
+      "type": "org.bukkit.attribute.Attribute"
+    },
+    {
+      "type": "org.bukkit.block.Biome"
+    },
+    {
+      "type": "org.bukkit.block.BlockType"
+    },
+    {
+      "type": "org.bukkit.block.banner.PatternType"
+    },
+    {
+      "type": "org.bukkit.craftbukkit.legacy.FieldRename"
+    },
+    {
+      "type": "org.bukkit.craftbukkit.legacy.MaterialRerouting"
+    },
+    {
+      "type": "org.bukkit.craftbukkit.legacy.MethodRerouting"
+    },
+    {
+      "type": "org.bukkit.craftbukkit.legacy.enums.EnumEvil"
+    },
+    {
+      "type": "org.bukkit.damage.DamageType"
+    },
+    {
+      "type": "org.bukkit.enchantments.Enchantment"
+    },
+    {
+      "type": "org.bukkit.entity.Cat$Type"
+    },
+    {
+      "type": "org.bukkit.entity.Chicken$Variant"
+    },
+    {
+      "type": "org.bukkit.entity.Cow$Variant"
+    },
+    {
+      "type": "org.bukkit.entity.Frog$Variant"
+    },
+    {
+      "type": "org.bukkit.entity.Pig$Variant"
+    },
+    {
+      "type": "org.bukkit.entity.Villager$Profession"
+    },
+    {
+      "type": "org.bukkit.entity.Villager$Type"
+    },
+    {
+      "type": "org.bukkit.entity.Wolf$SoundVariant"
+    },
+    {
+      "type": "org.bukkit.entity.Wolf$Variant"
+    },
+    {
+      "type": "org.bukkit.event.HandlerList",
+      "fields": [
+        {
+          "name": "EVENT_TYPES"
+        }
+      ]
+    },
+    {
+      "type": "org.bukkit.generator.structure.Structure"
+    },
+    {
+      "type": "org.bukkit.generator.structure.StructureType"
+    },
+    {
+      "type": "org.bukkit.inventory.ItemStack",
+      "fields": [
+        {
+          "name": "craftDelegate"
+        }
+      ]
+    },
+    {
+      "type": "org.bukkit.inventory.ItemType"
+    },
+    {
+      "type": "org.bukkit.inventory.MenuType"
+    },
+    {
+      "type": "org.bukkit.inventory.meta.trim.TrimMaterial"
+    },
+    {
+      "type": "org.bukkit.inventory.meta.trim.TrimPattern"
+    },
+    {
+      "type": "org.bukkit.map.MapCursor$Type"
+    },
+    {
+      "type": "org.bukkit.material.Banner"
+    },
+    {
+      "type": "org.bukkit.material.Bed"
+    },
+    {
+      "type": "org.bukkit.material.Button"
+    },
+    {
+      "type": "org.bukkit.material.Cake"
+    },
+    {
+      "type": "org.bukkit.material.Cauldron"
+    },
+    {
+      "type": "org.bukkit.material.Chest"
+    },
+    {
+      "type": "org.bukkit.material.Coal"
+    },
+    {
+      "type": "org.bukkit.material.CocoaPlant"
+    },
+    {
+      "type": "org.bukkit.material.Command"
+    },
+    {
+      "type": "org.bukkit.material.Comparator"
+    },
+    {
+      "type": "org.bukkit.material.Crops"
+    },
+    {
+      "type": "org.bukkit.material.DetectorRail"
+    },
+    {
+      "type": "org.bukkit.material.Diode"
+    },
+    {
+      "type": "org.bukkit.material.Dispenser"
+    },
+    {
+      "type": "org.bukkit.material.Door"
+    },
+    {
+      "type": "org.bukkit.material.Dye"
+    },
+    {
+      "type": "org.bukkit.material.EnderChest"
+    },
+    {
+      "type": "org.bukkit.material.FlowerPot"
+    },
+    {
+      "type": "org.bukkit.material.Furnace"
+    },
+    {
+      "type": "org.bukkit.material.Gate"
+    },
+    {
+      "type": "org.bukkit.material.Hopper"
+    },
+    {
+      "type": "org.bukkit.material.Ladder"
+    },
+    {
+      "type": "org.bukkit.material.Leaves"
+    },
+    {
+      "type": "org.bukkit.material.Lever"
+    },
+    {
+      "type": "org.bukkit.material.LongGrass"
+    },
+    {
+      "type": "org.bukkit.material.MaterialData"
+    },
+    {
+      "type": "org.bukkit.material.MonsterEggs"
+    },
+    {
+      "type": "org.bukkit.material.Mushroom"
+    },
+    {
+      "type": "org.bukkit.material.NetherWarts"
+    },
+    {
+      "type": "org.bukkit.material.Observer"
+    },
+    {
+      "type": "org.bukkit.material.PistonBaseMaterial"
+    },
+    {
+      "type": "org.bukkit.material.PistonExtensionMaterial"
+    },
+    {
+      "type": "org.bukkit.material.PoweredRail"
+    },
+    {
+      "type": "org.bukkit.material.PressurePlate"
+    },
+    {
+      "type": "org.bukkit.material.Pumpkin"
+    },
+    {
+      "type": "org.bukkit.material.Rails"
+    },
+    {
+      "type": "org.bukkit.material.RedstoneTorch"
+    },
+    {
+      "type": "org.bukkit.material.RedstoneWire"
+    },
+    {
+      "type": "org.bukkit.material.Sandstone"
+    },
+    {
+      "type": "org.bukkit.material.Sapling"
+    },
+    {
+      "type": "org.bukkit.material.Sign"
+    },
+    {
+      "type": "org.bukkit.material.Skull"
+    },
+    {
+      "type": "org.bukkit.material.SmoothBrick"
+    },
+    {
+      "type": "org.bukkit.material.SpawnEgg"
+    },
+    {
+      "type": "org.bukkit.material.Stairs"
+    },
+    {
+      "type": "org.bukkit.material.Step"
+    },
+    {
+      "type": "org.bukkit.material.Torch"
+    },
+    {
+      "type": "org.bukkit.material.TrapDoor"
+    },
+    {
+      "type": "org.bukkit.material.Tree"
+    },
+    {
+      "type": "org.bukkit.material.Tripwire"
+    },
+    {
+      "type": "org.bukkit.material.TripwireHook"
+    },
+    {
+      "type": "org.bukkit.material.Vine"
+    },
+    {
+      "type": "org.bukkit.material.Wood"
+    },
+    {
+      "type": "org.bukkit.material.WoodenStep"
+    },
+    {
+      "type": "org.bukkit.material.Wool"
+    },
+    {
+      "type": "org.bukkit.potion.PotionEffectType"
+    },
+    {
+      "type": "org.bxteam.divinemc.DivineHooks"
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineConfig"
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineConfig$AsyncCategory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        },
+        {
+          "name": "load",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineConfig$FixesCategory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        },
+        {
+          "name": "load",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineConfig$MiscCategory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        },
+        {
+          "name": "load",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineConfig$NetworkCategory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        },
+        {
+          "name": "load",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineConfig$PerformanceCategory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        },
+        {
+          "name": "load",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.config.DivineWorldConfig",
+      "methods": [
+        {
+          "name": "projectilesSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "unsupportedFeatures",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.server.chunk.ChunkRunnable",
+      "fields": [
+        {
+          "name": "toRun"
+        }
+      ]
+    },
+    {
+      "type": "org.bxteam.divinemc.server.chunk.ChunkSystemTaskQueue$PrioritisedQueuedTask$Holder",
+      "fields": [
+        {
+          "name": "removed"
+        }
+      ]
+    },
+    {
+      "type": "org.jline.terminal.impl.exec.ExecTerminalProvider",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.jline.terminal.impl.ffm.FfmTerminalProvider",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.jline.terminal.impl.jni.JniTerminalProvider",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix2f",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix3d",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m02"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        },
+        {
+          "name": "m12"
+        },
+        {
+          "name": "m20"
+        },
+        {
+          "name": "m21"
+        },
+        {
+          "name": "m22"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix3f",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m02"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        },
+        {
+          "name": "m12"
+        },
+        {
+          "name": "m20"
+        },
+        {
+          "name": "m21"
+        },
+        {
+          "name": "m22"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix3x2f",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        },
+        {
+          "name": "m20"
+        },
+        {
+          "name": "m21"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix4d",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m02"
+        },
+        {
+          "name": "m03"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        },
+        {
+          "name": "m12"
+        },
+        {
+          "name": "m13"
+        },
+        {
+          "name": "m20"
+        },
+        {
+          "name": "m21"
+        },
+        {
+          "name": "m22"
+        },
+        {
+          "name": "m23"
+        },
+        {
+          "name": "m30"
+        },
+        {
+          "name": "m31"
+        },
+        {
+          "name": "m32"
+        },
+        {
+          "name": "m33"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix4f",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m02"
+        },
+        {
+          "name": "m03"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        },
+        {
+          "name": "m12"
+        },
+        {
+          "name": "m13"
+        },
+        {
+          "name": "m20"
+        },
+        {
+          "name": "m21"
+        },
+        {
+          "name": "m22"
+        },
+        {
+          "name": "m23"
+        },
+        {
+          "name": "m30"
+        },
+        {
+          "name": "m31"
+        },
+        {
+          "name": "m32"
+        },
+        {
+          "name": "m33"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Matrix4x3f",
+      "fields": [
+        {
+          "name": "m00"
+        },
+        {
+          "name": "m01"
+        },
+        {
+          "name": "m02"
+        },
+        {
+          "name": "m10"
+        },
+        {
+          "name": "m11"
+        },
+        {
+          "name": "m12"
+        },
+        {
+          "name": "m20"
+        },
+        {
+          "name": "m21"
+        },
+        {
+          "name": "m22"
+        },
+        {
+          "name": "m30"
+        },
+        {
+          "name": "m31"
+        },
+        {
+          "name": "m32"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Vector2f",
+      "fields": [
+        {
+          "name": "x"
+        },
+        {
+          "name": "y"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Vector2i",
+      "fields": [
+        {
+          "name": "x"
+        },
+        {
+          "name": "y"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Vector3f",
+      "fields": [
+        {
+          "name": "x"
+        },
+        {
+          "name": "y"
+        },
+        {
+          "name": "z"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Vector3i",
+      "fields": [
+        {
+          "name": "x"
+        },
+        {
+          "name": "y"
+        },
+        {
+          "name": "z"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Vector4f",
+      "fields": [
+        {
+          "name": "w"
+        },
+        {
+          "name": "x"
+        },
+        {
+          "name": "y"
+        },
+        {
+          "name": "z"
+        }
+      ]
+    },
+    {
+      "type": "org.joml.Vector4i",
+      "fields": [
+        {
+          "name": "w"
+        },
+        {
+          "name": "x"
+        },
+        {
+          "name": "y"
+        },
+        {
+          "name": "z"
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.Context"
+    },
+    {
+      "type": "org.mozilla.javascript.ContextFactory"
+    },
+    {
+      "type": "org.mozilla.javascript.Function"
+    },
+    {
+      "type": "org.mozilla.javascript.Interpreter",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.JavaAdapter"
+    },
+    {
+      "type": "org.mozilla.javascript.ScriptableObject"
+    },
+    {
+      "type": "org.mozilla.javascript.VMBridge_custom"
+    },
+    {
+      "type": "org.mozilla.javascript.engine.Builtins"
+    },
+    {
+      "type": "org.mozilla.javascript.engine.RhinoScriptEngineFactory"
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_1",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_10",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_2",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_3",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_4",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_5",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_6",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_7",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_8",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.gen.eval_9",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.jdk18.VMBridge_jdk18",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.mozilla.javascript.optimizer.Codegen",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.osgi.framework.FrameworkUtil"
+    },
+    {
+      "type": "org.purpurmc.purpur.PurpurConfig",
+      "methods": [
+        {
+          "name": "allowWaterPlacementInEnd",
+          "parameterTypes": []
+        },
+        {
+          "name": "beeCountPayload",
+          "parameterTypes": []
+        },
+        {
+          "name": "blastResistanceSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "blockFallMultiplierSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "blockSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "broadcastSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "clampAttributes",
+          "parameterTypes": []
+        },
+        {
+          "name": "commandSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "deathMessages",
+          "parameterTypes": []
+        },
+        {
+          "name": "disableGiveCommandDrops",
+          "parameterTypes": []
+        },
+        {
+          "name": "enchantmentSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "entitySettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "fixProjectileLootingTransfer",
+          "parameterTypes": []
+        },
+        {
+          "name": "generateEndVoidRings",
+          "parameterTypes": []
+        },
+        {
+          "name": "limitArmor",
+          "parameterTypes": []
+        },
+        {
+          "name": "loggerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "messages",
+          "parameterTypes": []
+        },
+        {
+          "name": "networkSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "playerDeathsAlwaysShowItem",
+          "parameterTypes": []
+        },
+        {
+          "name": "registerMinecraftDebugCommands",
+          "parameterTypes": []
+        },
+        {
+          "name": "serverModName",
+          "parameterTypes": []
+        },
+        {
+          "name": "startupCommands",
+          "parameterTypes": []
+        },
+        {
+          "name": "tickLoopSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "tpsCatchup",
+          "parameterTypes": []
+        },
+        {
+          "name": "useAlternateKeepAlive",
+          "parameterTypes": []
+        },
+        {
+          "name": "usernameValidationSettings",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.purpurmc.purpur.PurpurWorldConfig",
+      "methods": [
+        {
+          "name": "allaySettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "anvilSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "armadilloSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "armorstandSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrowSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "axolotlSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "azaleaSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "batSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "beaconSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "bedSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "beeSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "bigDripleafSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "blazeSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "boggedSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "cactusSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "camelSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "campFireSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "catSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "cauldronSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "caveSpiderSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "chestSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "chickenSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "codSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "composterSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "conduitSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "coralSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "cowSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "creakingSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "creeperSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "daytimeCycleSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "dispenserSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "dolphinSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "donkeySettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "doorSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "dragonEggSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "drownedSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "drowningSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "elderGuardianSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "elytraSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "enchantmentTableSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "endCrystalSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "enderDragonSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "endermanSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "endermiteSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "entitySettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "evokerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "explosionSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "farmlandSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "floweringAzaleaSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "foxSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "frogSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "furnaceSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "ghastSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "giantSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "glowSquidSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "goatSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "guardianSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "halloweenSetting",
+          "parameterTypes": []
+        },
+        {
+          "name": "hoglinSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "horseSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "hungerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "huskSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "iceSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "illusionerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "infinityArrowsSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "ironGolemSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "itemSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "lavaSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "llamaSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "magmaBlockSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "magmaCubeSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "minecartSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "miscGameplayMechanicsSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "mobEffectSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "mobSpawnerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "mooshroomSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "muleSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "netherWartSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "observerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "ocelotSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "pandaSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "parrotSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "phantomSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "pigSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "piglinBruteSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "piglinSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "pillagerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "pistonSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "playerNetheriteFireResistance",
+          "parameterTypes": []
+        },
+        {
+          "name": "playerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "polarBearSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "powderSnowSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "projectileOffsetSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "pufferfishSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "rabbitSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "railSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "ravagerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "respawnAnchorSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "ridableSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "salmonSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "sculkShriekerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "shearsCanDefuseTntSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "sheepSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "shulkerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "signSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "silkTouchSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "silverfishSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "skeletonHorseSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "skeletonSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "slabSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "slimeSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "snifferSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "snowGolemSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "snowballSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "spawnerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "spiderSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "spongeSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "squidSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "stonecutterSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "straySettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "striderSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "sugarCaneSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "tadpoleSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "toolSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "traderLlamaSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "tropicalFishSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "turtleEggSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "turtleSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "vexSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "villagerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "vindicatorSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "wanderingTraderSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "wardenSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "waterSources",
+          "parameterTypes": []
+        },
+        {
+          "name": "witchSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "witherSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "witherSkeletonSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "wolfSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "zoglinSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "zombieHorseSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "zombieSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "zombieVillagerSettings",
+          "parameterTypes": []
+        },
+        {
+          "name": "zombifiedPiglinSettings",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.robolectric.Robolectric"
+    },
+    {
+      "type": "org.spigotmc.SpigotConfig",
+      "methods": [
+        {
+          "name": "attributeMaxes",
+          "parameterTypes": []
+        },
+        {
+          "name": "belowZeroGenerationInExistingChunks",
+          "parameterTypes": []
+        },
+        {
+          "name": "bungee",
+          "parameterTypes": []
+        },
+        {
+          "name": "debug",
+          "parameterTypes": []
+        },
+        {
+          "name": "disablePlayerDataSaving",
+          "parameterTypes": []
+        },
+        {
+          "name": "disabledAdvancements",
+          "parameterTypes": []
+        },
+        {
+          "name": "logCommands",
+          "parameterTypes": []
+        },
+        {
+          "name": "logDeaths",
+          "parameterTypes": []
+        },
+        {
+          "name": "messages",
+          "parameterTypes": []
+        },
+        {
+          "name": "movedTooQuicklyMultiplier",
+          "parameterTypes": []
+        },
+        {
+          "name": "movedWronglyThreshold",
+          "parameterTypes": []
+        },
+        {
+          "name": "nettyThreads",
+          "parameterTypes": []
+        },
+        {
+          "name": "playerSample",
+          "parameterTypes": []
+        },
+        {
+          "name": "playerShuffle",
+          "parameterTypes": []
+        },
+        {
+          "name": "replaceCommands",
+          "parameterTypes": []
+        },
+        {
+          "name": "saveUserCacheOnStopOnly",
+          "parameterTypes": []
+        },
+        {
+          "name": "silentCommandBlocks",
+          "parameterTypes": []
+        },
+        {
+          "name": "spamExclusions",
+          "parameterTypes": []
+        },
+        {
+          "name": "stats",
+          "parameterTypes": []
+        },
+        {
+          "name": "tabComplete",
+          "parameterTypes": []
+        },
+        {
+          "name": "tpsCommand",
+          "parameterTypes": []
+        },
+        {
+          "name": "userCacheCap",
+          "parameterTypes": []
+        },
+        {
+          "name": "watchdog",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.spigotmc.SpigotWorldConfig",
+      "methods": [
+        {
+          "name": "activationRange",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrowDespawnRate",
+          "parameterTypes": []
+        },
+        {
+          "name": "belowZeroGenerationInExistingChunks",
+          "parameterTypes": []
+        },
+        {
+          "name": "enableZombiePigmenPortalSpawns",
+          "parameterTypes": []
+        },
+        {
+          "name": "endPortalSoundRadius",
+          "parameterTypes": []
+        },
+        {
+          "name": "expMerge",
+          "parameterTypes": []
+        },
+        {
+          "name": "growthModifiers",
+          "parameterTypes": []
+        },
+        {
+          "name": "hangingTickFrequency",
+          "parameterTypes": []
+        },
+        {
+          "name": "hoppers",
+          "parameterTypes": []
+        },
+        {
+          "name": "initHunger",
+          "parameterTypes": []
+        },
+        {
+          "name": "initWorldGenSeeds",
+          "parameterTypes": []
+        },
+        {
+          "name": "itemDespawnRate",
+          "parameterTypes": []
+        },
+        {
+          "name": "itemMerge",
+          "parameterTypes": []
+        },
+        {
+          "name": "keepDragonDeathPerWorld",
+          "parameterTypes": []
+        },
+        {
+          "name": "maxTickTimes",
+          "parameterTypes": []
+        },
+        {
+          "name": "maxTntPerTick",
+          "parameterTypes": []
+        },
+        {
+          "name": "mobSpawnRange",
+          "parameterTypes": []
+        },
+        {
+          "name": "nerfSpawnerMobs",
+          "parameterTypes": []
+        },
+        {
+          "name": "simulationDistance",
+          "parameterTypes": []
+        },
+        {
+          "name": "thunderChance",
+          "parameterTypes": []
+        },
+        {
+          "name": "trackingRange",
+          "parameterTypes": []
+        },
+        {
+          "name": "unloadFrozenChunks",
+          "parameterTypes": []
+        },
+        {
+          "name": "viewDistance",
+          "parameterTypes": []
+        },
+        {
+          "name": "witherSpawnSoundRadius",
+          "parameterTypes": []
+        },
+        {
+          "name": "zombieAggressiveTowardsVillager",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "org.spongepowered.configurate.AbstractCommentedConfigurationNode",
+      "fields": [
+        {
+          "name": "comment"
+        }
+      ]
+    },
+    {
+      "type": "org.spongepowered.configurate.ListConfigValue",
+      "fields": [
+        {
+          "name": "values"
+        }
+      ]
+    },
+    {
+      "type": "org.w3c.dom.Node"
+    },
+    {
+      "type": "oshi.jna.ByRef$CloseableHANDLEByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "oshi.jna.ByRef$CloseableLONGLONGByReference",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "oshi.jna.Struct$CloseablePdhRawCounter",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "oshi.jna.Struct$CloseablePerformanceInformation",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "oshi.jna.Struct$CloseableSystemInfo",
+      "allDeclaredFields": true
+    },
+    {
+      "type": "sun.management.ClassLoadingImpl"
+    },
+    {
+      "type": "sun.management.CompilationImpl"
+    },
+    {
+      "type": "sun.management.ManagementFactoryHelper$1"
+    },
+    {
+      "type": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl"
+    },
+    {
+      "type": "sun.management.MemoryImpl"
+    },
+    {
+      "type": "sun.management.MemoryManagerImpl"
+    },
+    {
+      "type": "sun.management.MemoryPoolImpl"
+    },
+    {
+      "type": "sun.management.RuntimeImpl"
+    },
+    {
+      "type": "sun.misc.Unsafe",
+      "allDeclaredFields": true,
+      "methods": [
+        {
+          "name": "invokeCleaner",
+          "parameterTypes": [
+            "java.nio.ByteBuffer"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.misc.VM"
+    },
+    {
+      "type": "sun.nio.ch.SelectorImpl",
+      "fields": [
+        {
+          "name": "publicSelectedKeys"
+        },
+        {
+          "name": "selectedKeys"
+        }
+      ]
+    },
+    {
+      "type": "sun.reflect.misc.Trampoline",
+      "methods": [
+        {
+          "name": "invoke",
+          "parameterTypes": [
+            "java.lang.reflect.Method",
+            "java.lang.Object",
+            "java.lang.Object[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.pkcs12.PKCS12KeyStore",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.DRBG",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.security.SecureRandomParameters"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.DSA$SHA224withDSA",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.DSA$SHA256withDSA",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.JavaKeyStore$JKS",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.MD5",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.SHA",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.SHA2$SHA224",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.SHA2$SHA256",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.SHA5$SHA384",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.SHA5$SHA512",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.X509Factory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.PSSParameters",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.RSAKeyPairGenerator$Legacy",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.RSAPSSSignature",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.RSASignature$SHA1withRSA",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.AuthorityInfoAccessExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.BasicConstraintsExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.CRLDistributionPointsExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.CertificatePoliciesExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.ExtendedKeyUsageExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.IssuerAlternativeNameExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.KeyUsageExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.NetscapeCertTypeExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.PrivateKeyUsageExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.SubjectAlternativeNameExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.Boolean",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": {
+        "proxy": [
+          "com.sun.jna.platform.win32.Advapi32"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "com.sun.jna.platform.win32.Kernel32"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "com.sun.jna.platform.win32.Ole32"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "com.sun.jna.platform.win32.OleAuto"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "com.sun.jna.platform.win32.Pdh"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "com.sun.jna.platform.win32.Psapi"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "me.lucko.spark.paper.common.monitor.cpu.CpuMonitor$OperatingSystemMXBean"
+        ]
+      }
+    },
+    {
+      "type": {
+        "proxy": [
+          "oshi.jna.platform.windows.Kernel32"
+        ]
+      }
+    }
+  ],
+  "resources": [
+    {
+      "glob": "META-INF/log4j-provider.properties"
+    },
+    {
+      "glob": "META-INF/mappings/reobf.tiny"
+    },
+    {
+      "glob": "META-INF/maven/org.bxteam.divinemc/divinemc-api/pom.properties"
+    },
+    {
+      "glob": "META-INF/maven/org.jline/jline-native/pom.properties"
+    },
+    {
+      "glob": "META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat"
+    },
+    {
+      "glob": "META-INF/services/ca.spottedleaf.moonrise.common.PlatformHooks"
+    },
+    {
+      "glob": "META-INF/services/io.papermc.paper.InternalAPIBridge"
+    },
+    {
+      "glob": "META-INF/services/io.papermc.paper.ServerBuildInfo"
+    },
+    {
+      "glob": "META-INF/services/io.papermc.paper.plugin.lifecycle.event.types.LifecycleEventTypeProvider"
+    },
+    {
+      "glob": "META-INF/services/io.papermc.paper.registry.RegistryAccess"
+    },
+    {
+      "glob": "META-INF/services/java.lang.System$LoggerFinder"
+    },
+    {
+      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
+    },
+    {
+      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
+    },
+    {
+      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
+    },
+    {
+      "glob": "META-INF/services/java.nio.charset.spi.CharsetProvider"
+    },
+    {
+      "glob": "META-INF/services/java.nio.file.spi.FileSystemProvider"
+    },
+    {
+      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
+    },
+    {
+      "glob": "META-INF/services/javax.script.ScriptEngineFactory"
+    },
+    {
+      "glob": "META-INF/services/javax.xml.parsers.DocumentBuilderFactory"
+    },
+    {
+      "glob": "META-INF/services/net.kyori.adventure.text.logger.slf4j.ComponentLoggerProvider"
+    },
+    {
+      "glob": "META-INF/services/net.kyori.adventure.text.minimessage.MiniMessage$Provider"
+    },
+    {
+      "glob": "META-INF/services/net.kyori.adventure.text.serializer.ansi.ANSIComponentSerializer$Provider"
+    },
+    {
+      "glob": "META-INF/services/net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Provider"
+    },
+    {
+      "glob": "META-INF/services/net.kyori.adventure.text.serializer.plain.PlainTextComponentSerializer$Provider"
+    },
+    {
+      "glob": "META-INF/services/org.apache.logging.log4j.core.util.ContextDataProvider"
+    },
+    {
+      "glob": "META-INF/services/org.apache.logging.log4j.core.util.WatchEventService"
+    },
+    {
+      "glob": "META-INF/services/org.apache.logging.log4j.spi.Provider"
+    },
+    {
+      "glob": "META-INF/services/org.apache.logging.log4j.util.PropertySource"
+    },
+    {
+      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
+    },
+    {
+      "glob": "META-INF/services/org/jline/terminal/provider/exec"
+    },
+    {
+      "glob": "META-INF/services/org/jline/terminal/provider/ffm"
+    },
+    {
+      "glob": "META-INF/services/org/jline/terminal/provider/jansi"
+    },
+    {
+      "glob": "META-INF/services/org/jline/terminal/provider/jna"
+    },
+    {
+      "glob": "META-INF/services/org/jline/terminal/provider/jni"
+    },
+    {
+      "glob": "assets/.mcassetsroot"
+    },
+    {
+      "glob": "assets/minecraft/lang/deprecated.json"
+    },
+    {
+      "glob": "assets/minecraft/lang/en_us.json"
+    },
+    {
+      "glob": "com/sun/jna/win32-x86-64/jnidispatch.dll"
+    },
+    {
+      "glob": "configurations/bukkit.yml"
+    },
+    {
+      "glob": "configurations/commands.yml"
+    },
+    {
+      "glob": "configurations/help.yml"
+    },
+    {
+      "glob": "data/.mcassetsroot"
+    },
+    {
+      "glob": "log4j2-test.jsn"
+    },
+    {
+      "glob": "log4j2-test.json"
+    },
+    {
+      "glob": "log4j2-test.properties"
+    },
+    {
+      "glob": "log4j2-test.xml"
+    },
+    {
+      "glob": "log4j2-test.yaml"
+    },
+    {
+      "glob": "log4j2-test.yml"
+    },
+    {
+      "glob": "log4j2-test18b4aac2.jsn"
+    },
+    {
+      "glob": "log4j2-test18b4aac2.json"
+    },
+    {
+      "glob": "log4j2-test18b4aac2.properties"
+    },
+    {
+      "glob": "log4j2-test18b4aac2.xml"
+    },
+    {
+      "glob": "log4j2-test18b4aac2.yaml"
+    },
+    {
+      "glob": "log4j2-test18b4aac2.yml"
+    },
+    {
+      "glob": "log4j2.StatusLogger.properties"
+    },
+    {
+      "glob": "log4j2.component.properties"
+    },
+    {
+      "glob": "log4j2.jsn"
+    },
+    {
+      "glob": "log4j2.json"
+    },
+    {
+      "glob": "log4j2.properties"
+    },
+    {
+      "glob": "log4j2.system.properties"
+    },
+    {
+      "glob": "log4j2.xml"
+    },
+    {
+      "glob": "log4j2.yaml"
+    },
+    {
+      "glob": "log4j2.yml"
+    },
+    {
+      "glob": "log4j218b4aac2.jsn"
+    },
+    {
+      "glob": "log4j218b4aac2.json"
+    },
+    {
+      "glob": "log4j218b4aac2.properties"
+    },
+    {
+      "glob": "log4j218b4aac2.xml"
+    },
+    {
+      "glob": "log4j218b4aac2.yaml"
+    },
+    {
+      "glob": "log4j218b4aac2.yml"
+    },
+    {
+      "glob": "org/bukkit/craftbukkit/CraftServer.class"
+    },
+    {
+      "glob": "org/jline/nativ/Windows/x86_64/jlinenative.dll"
+    },
+    {
+      "glob": "org/mozilla/classfile/ClassFileWriter.class"
+    },
+    {
+      "glob": "oshi.architecture.properties"
+    },
+    {
+      "glob": "oshi.properties"
+    },
+    {
+      "glob": "version.json"
+    },
+    {
+      "module": "java.base",
+      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
+    },
+    {
+      "module": "java.base",
+      "glob": "jdk/internal/icu/impl/data/icudt76b/uprops.icu"
+    },
+    {
+      "module": "java.base",
+      "glob": "sun/net/idn/uidna.spp"
+    },
+    {
+      "module": "java.xml",
+      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
+    },
+    {
+      "module": "jdk.jfr",
+      "glob": "jdk/jfr/internal/query/view.ini"
+    },
+    {
+      "module": "jdk.jfr",
+      "glob": "jdk/jfr/internal/types/metadata.bin"
+    }
+  ],
+  
+  "bundles": [],
+  "jni": [
+    {
+      "type": "[Lcom.sun.management.internal.DiagnosticCommandArgumentInfo;"
+    },
+    {
+      "type": "[Lcom.sun.management.internal.DiagnosticCommandInfo;"
+    },
+    {
+      "type": "[Ljava.lang.String;"
+    },
+    {
+      "type": "com.sun.jna.Callback"
+    },
+    {
+      "type": "com.sun.jna.CallbackReference",
+      "methods": [
+        {
+          "name": "getCallback",
+          "parameterTypes": [
+            "java.lang.Class",
+            "com.sun.jna.Pointer",
+            "boolean"
+          ]
+        },
+        {
+          "name": "getFunctionPointer",
+          "parameterTypes": [
+            "com.sun.jna.Callback",
+            "boolean"
+          ]
+        },
+        {
+          "name": "getNativeString",
+          "parameterTypes": [
+            "java.lang.Object",
+            "boolean"
+          ]
+        },
+        {
+          "name": "initializeThread",
+          "parameterTypes": [
+            "com.sun.jna.Callback",
+            "com.sun.jna.CallbackReference$AttachOptions"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.CallbackReference$AttachOptions"
+    },
+    {
+      "type": "com.sun.jna.FromNativeConverter",
+      "methods": [
+        {
+          "name": "nativeType",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.IntegerType",
+      "fields": [
+        {
+          "name": "value"
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.JNIEnv"
+    },
+    {
+      "type": "com.sun.jna.Native",
+      "methods": [
+        {
+          "name": "dispose",
+          "parameterTypes": []
+        },
+        {
+          "name": "fromNative",
+          "parameterTypes": [
+            "com.sun.jna.FromNativeConverter",
+            "java.lang.Object",
+            "java.lang.reflect.Method"
+          ]
+        },
+        {
+          "name": "fromNative",
+          "parameterTypes": [
+            "java.lang.Class",
+            "java.lang.Object"
+          ]
+        },
+        {
+          "name": "fromNative",
+          "parameterTypes": [
+            "java.lang.reflect.Method",
+            "java.lang.Object"
+          ]
+        },
+        {
+          "name": "nativeType",
+          "parameterTypes": [
+            "java.lang.Class"
+          ]
+        },
+        {
+          "name": "toNative",
+          "parameterTypes": [
+            "com.sun.jna.ToNativeConverter",
+            "java.lang.Object"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.Native$ffi_callback",
+      "methods": [
+        {
+          "name": "invoke",
+          "parameterTypes": [
+            "long",
+            "long",
+            "long"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.NativeMapped",
+      "methods": [
+        {
+          "name": "toNative",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.Pointer",
+      "fields": [
+        {
+          "name": "peer"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "long"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.PointerType",
+      "fields": [
+        {
+          "name": "pointer"
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.Structure",
+      "fields": [
+        {
+          "name": "memory"
+        },
+        {
+          "name": "typeInfo"
+        }
+      ],
+      "methods": [
+        {
+          "name": "autoRead",
+          "parameterTypes": []
+        },
+        {
+          "name": "autoWrite",
+          "parameterTypes": []
+        },
+        {
+          "name": "getTypeInfo",
+          "parameterTypes": []
+        },
+        {
+          "name": "newInstance",
+          "parameterTypes": [
+            "java.lang.Class",
+            "long"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.Structure$ByValue"
+    },
+    {
+      "type": "com.sun.jna.Structure$FFIType$FFITypes",
+      "fields": [
+        {
+          "name": "ffi_type_double"
+        },
+        {
+          "name": "ffi_type_float"
+        },
+        {
+          "name": "ffi_type_longdouble"
+        },
+        {
+          "name": "ffi_type_pointer"
+        },
+        {
+          "name": "ffi_type_sint16"
+        },
+        {
+          "name": "ffi_type_sint32"
+        },
+        {
+          "name": "ffi_type_sint64"
+        },
+        {
+          "name": "ffi_type_sint8"
+        },
+        {
+          "name": "ffi_type_uint16"
+        },
+        {
+          "name": "ffi_type_uint32"
+        },
+        {
+          "name": "ffi_type_uint64"
+        },
+        {
+          "name": "ffi_type_uint8"
+        },
+        {
+          "name": "ffi_type_void"
+        }
+      ]
+    },
+    {
+      "type": "com.sun.jna.WString",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.String"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.management.internal.DiagnosticCommandArgumentInfo",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.String",
+            "java.lang.String",
+            "java.lang.String",
+            "java.lang.String",
+            "boolean",
+            "boolean",
+            "boolean",
+            "int"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.management.internal.DiagnosticCommandInfo",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.String",
+            "java.lang.String",
+            "java.lang.String",
+            "boolean",
+            "java.util.List"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "com.sun.security.auth.module.NTSystem",
+      "fields": [
+        {
+          "name": "domain"
+        },
+        {
+          "name": "domainSID"
+        },
+        {
+          "name": "groupIDs"
+        },
+        {
+          "name": "primaryGroupID"
+        },
+        {
+          "name": "userName"
+        },
+        {
+          "name": "userSID"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Boolean",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "boolean"
+          ]
+        },
+        {
+          "name": "getBoolean",
+          "parameterTypes": [
+            "java.lang.String"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Byte",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "byte"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Character",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "char"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Class",
+      "methods": [
+        {
+          "name": "getComponentType",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Double",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "double"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Float",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "float"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Integer",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "int"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Long",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "long"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Object",
+      "methods": [
+        {
+          "name": "toString",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.ProcessBuilder$RedirectPipeImpl",
+      "fields": [
+        {
+          "name": "fd"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Short",
+      "fields": [
+        {
+          "name": "TYPE"
+        },
+        {
+          "name": "value"
+        }
+      ],
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "short"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.String",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "byte[]"
+          ]
+        },
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "byte[]",
+            "java.lang.String"
+          ]
+        },
+        {
+          "name": "getBytes",
+          "parameterTypes": []
+        },
+        {
+          "name": "getBytes",
+          "parameterTypes": [
+            "java.lang.String"
+          ]
+        },
+        {
+          "name": "toCharArray",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.lang.System",
+      "methods": [
+        {
+          "name": "getProperty",
+          "parameterTypes": [
+            "java.lang.String"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.UnsatisfiedLinkError",
+      "methods": [
+        {
+          "name": "<init>",
+          "parameterTypes": [
+            "java.lang.String"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "java.lang.Void",
+      "fields": [
+        {
+          "name": "TYPE"
+        }
+      ]
+    },
+    {
+      "type": "java.lang.reflect.Method",
+      "methods": [
+        {
+          "name": "getParameterTypes",
+          "parameterTypes": []
+        },
+        {
+          "name": "getReturnType",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.Buffer",
+      "methods": [
+        {
+          "name": "position",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.ByteBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.CharBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.DoubleBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.FloatBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.IntBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.LongBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.nio.ShortBuffer",
+      "methods": [
+        {
+          "name": "array",
+          "parameterTypes": []
+        },
+        {
+          "name": "arrayOffset",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "java.util.Arrays",
+      "methods": [
+        {
+          "name": "asList",
+          "parameterTypes": [
+            "java.lang.Object[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.bukkit.craftbukkit.Main",
+      "methods": [
+        {
+          "name": "main",
+          "parameterTypes": [
+            "java.lang.String[]"
+          ]
+        }
+      ]
+    },
+    {
+      "type": "org.jline.nativ.Kernel32",
+      "fields": [
+        {
+          "name": "BACKGROUND_BLUE"
+        },
+        {
+          "name": "BACKGROUND_GREEN"
+        },
+        {
+          "name": "BACKGROUND_INTENSITY"
+        },
+        {
+          "name": "BACKGROUND_RED"
+        },
+        {
+          "name": "COMMON_LVB_GRID_HORIZONTAL"
+        },
+        {
+          "name": "COMMON_LVB_GRID_LVERTICAL"
+        },
+        {
+          "name": "COMMON_LVB_GRID_RVERTICAL"
+        },
+        {
+          "name": "COMMON_LVB_LEADING_BYTE"
+        },
+        {
+          "name": "COMMON_LVB_REVERSE_VIDEO"
+        },
+        {
+          "name": "COMMON_LVB_TRAILING_BYTE"
+        },
+        {
+          "name": "COMMON_LVB_UNDERSCORE"
+        },
+        {
+          "name": "FOREGROUND_BLUE"
+        },
+        {
+          "name": "FOREGROUND_GREEN"
+        },
+        {
+          "name": "FOREGROUND_INTENSITY"
+        },
+        {
+          "name": "FOREGROUND_RED"
+        },
+        {
+          "name": "FORMAT_MESSAGE_FROM_SYSTEM"
+        },
+        {
+          "name": "INVALID_HANDLE_VALUE"
+        },
+        {
+          "name": "STD_ERROR_HANDLE"
+        },
+        {
+          "name": "STD_INPUT_HANDLE"
+        },
+        {
+          "name": "STD_OUTPUT_HANDLE"
+        }
+      ]
+    },
+    {
+      "type": "sun.launcher.LauncherHelper",
+      "fields": [
+        {
+          "name": "isStaticMain"
+        },
+        {
+          "name": "noArgMain"
+        }
+      ],
+      "methods": [
+        {
+          "name": "getApplicationClass",
+          "parameterTypes": []
+        }
+      ]
+    },
+    {
+      "type": "sun.management.VMManagementImpl",
+      "fields": [
+        {
+          "name": "compTimeMonitoringSupport"
+        },
+        {
+          "name": "currentThreadCpuTimeSupport"
+        },
+        {
+          "name": "objectMonitorUsageSupport"
+        },
+        {
+          "name": "otherThreadCpuTimeSupport"
+        },
+        {
+          "name": "remoteDiagnosticCommandsSupport"
+        },
+        {
+          "name": "synchronizerUsageSupport"
+        },
+        {
+          "name": "threadAllocatedMemorySupport"
+        },
+        {
+          "name": "threadContentionMonitoringSupport"
+        }
+      ]
+    }
+  ]
+}
\ No newline at end of file
